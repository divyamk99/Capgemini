CREATE OR REPLACE PROCEDURE DAAS_COMMON.COMP_DOMAIN_GENERIC_UPDATE_PROC()
RETURNS VARCHAR NOT NULL
LANGUAGE JAVASCRIPT
EXECUTE AS CALLER
AS
$$

proc_output = "";

try
{
	snowflake.execute( {sqlText: "BEGIN;" } );
	
		snowflake.execute( {sqlText: `UPDATE DAAS_CORE.COMP_DETAIL_FACT 
	SET REPLAY_COUNTER = NVL(REPLAY_COUNTER, 0) + 1 
	WHERE COMP_DETAIL_FACT_SK IN 
	(	
	SELECT 
		CDF.COMP_DETAIL_FACT_SK
	FROM
		DAAS_CORE.COMP_DETAIL_FACT CDF
	JOIN
		DAAS_CORE_GAMING_VW.COMP_DETAIL_FACT_VW CDFVW
	ON
		CDFVW.COMP_DETAIL_FACT_SK = CDF.COMP_DETAIL_FACT_SK
	JOIN
		TABLE(DAAS_COMMON.TRIP_CONFIG_UDF('COMP_STATUS_CD', 'TRIP_TRIGGER', '', '', 'COMP_OPEN_TRANSACTION', CDF.REDEEM_DTTM::DATE)) TTC
	JOIN
		TABLE(DAAS_COMMON.TRIP_CONFIG_UDF('COMP_STATUS_CD', 'TRIP_TRIGGER', '', '', 'COMP_VOID_TRANSACTION', CDF.REDEEM_DTTM::DATE)) VD
	WHERE
		(CONTAINS(TTC.VALUE, CDF.COMP_STATUS_CD) OR CONTAINS(VD.VALUE, CDF.COMP_STATUS_CD))
		AND CASE WHEN CDF.COMP_STATUS_CD = 'M' AND COALESCE(CDF.USED_COMP_WORTH_AMT, 0) = 0 AND COALESCE(CDF.USED_REWARD_CREDT_AMT, 0) = 0 THEN FALSE ELSE TRUE END 
		AND CDF.REDEEM_DTTM = '2024-02-13'  
		AND CDF.DELETE_IND = 'N' AND CDF.COMP_STATUS_CD  <> 'V'
		AND EXISTS 
		(
			SELECT
				1
			FROM
				DAAS_CORE.TRIP_CONFIG TC
			WHERE
				TC.PROPERTY_CD = CDFVW.PROPERTY_CD
				AND TC.ACTIVE_FLG = 'Y'
				AND EXISTS 
				(
					SELECT
						1
					FROM
						DAAS_COMMON.PROPERTY_MARKET_LKP LKP
					WHERE
						TC.PROPERTY_CD = LKP.PROPERTY_CD 
				) 
		)
		AND NOT EXISTS 
		(
			SELECT 
				1 
			FROM 
				DAAS_CORE.TRIP_DETAIL TD 
			WHERE 
				TD.TRANSACTION_TYPE = 'COMP' 
				AND TD.TRANSACTION_TABLE_SK = CDF.COMP_DETAIL_FACT_SK
				AND EXISTS 
				(
					SELECT 
						1
					FROM
						DAAS_CORE.TRIP_MASTER TM
					WHERE
						TD.TRIP_MASTER_ID = TM.TRIP_MASTER_ID
						AND TM.DELETE_IND = 'N'
				)
		)
		AND NOT EXISTS
		(
			SELECT 
				1
			FROM
				DAAS_CORE.TRIP_FILTERED_TXNS RFS
			WHERE
				CDF.COMP_DETAIL_FACT_SK = RFS.TRANSACTION_TABLE_SK
				AND RFS.TRANSACTION_TYPE = 'COMP'
				AND RFS.DELETE_IND = 'N'
		)
);
	` } );
	
	

	
	
	
		snowflake.execute( {sqlText: "COMMIT;" } );

	proc_output = "SUCCESS";
}	

catch (err) 
{ 
snowflake.execute( {sqlText: "ROLLBACK;" } );

proc_output += "\n Failed: Code: " + err.code + "\n  State: " + err.state;
proc_output += "\n  Message: " + err.message;
proc_output += "\nStack Trace:\n" + err.stackTraceTxt;
}
 
return proc_output;
$$;