CREATE OR REPLACE PROCEDURE DAAS_ADHOC.FREEPLAY_MARK_ENT_DAS_ADHOC_PROC()
RETURNS VARCHAR NOT NULL
LANGUAGE JAVASCRIPT
EXECUTE AS OWNER
AS
$$

proc_output = "";
proc_step = "";

try
{
	snowflake.execute( {sqlText: "BEGIN;" } );
	

	snowflake.execute( {sqlText: `CREATE OR REPLACE TABLE DAAS_TEMP.FREEPLAY_MARK_ENT_DAS_DESCRIPANCY
									AS
									WITH FREEPLAY AS(	
	WITH FREEPLAY_TRIP_DAYS AS
(
    SELECT
        TM.TRIP_MASTER_ID,
        DD.DATE AS GUEST_ACTIVITY_DATE
    FROM
        DAAS_CORE.TRIP_MASTER TM
    JOIN
        DAAS_COMMON.DATE_DIM DD
     ON
        DD.DATE BETWEEN TM.TRIP_START_DT AND TM.TRIP_END_DT
     WHERE
        TM.DELETE_IND = 'N'
    
     AND TM.MARKET_CD <> 'CH2'
        GROUP BY
            TM.TRIP_MASTER_ID,
            GUEST_ACTIVITY_DATE
),
	TRIP_GUEST_FREEPLAY AS 
	(
	SELECT
		TM.TRIP_MASTER_ID,
		GUEST_UNIQUE_ID,
		FREEPLAY_TRIP_DAYS.GUEST_ACTIVITY_DATE,
		CASE WHEN SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN  FREE_PLAY_POINTS ELSE 0 END)<0 THEN -1 ELSE 1 END AS PROPERTY_SIGN,
		CASE WHEN SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN  FREE_PLAY_POINTS ELSE 0 END)<0 THEN -1 ELSE 1 END AS MARKET_SIGN,
		CASE WHEN SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN FREE_PLAY_POINTS ELSE 0 END)<0 THEN -1 ELSE 1 END AS ENTERPRISE_SIGN
	FROM
		DAAS_CORE.TRIP_DETAIL TD
	JOIN 
		DAAS_CORE.TRIP_MASTER TM 
	ON
		TD.TRIP_MASTER_ID = TM.TRIP_MASTER_ID
	JOIN
		DAAS_CORE.COMP_FREE_PLAY_DETAIL_FACT CFPDF
	ON
		TD.TRANSACTION_TABLE_SK = CFPDF.COMP_FREE_PLAY_DETAIL_FACT_SK
	JOIN 
		FREEPLAY_TRIP_DAYS
	ON
		FREEPLAY_TRIP_DAYS.TRIP_MASTER_ID = TD.TRIP_MASTER_ID
		AND FREEPLAY_TRIP_DAYS.GUEST_ACTIVITY_DATE = TD.BUSINESS_START_DT
	WHERE
		TD.TRANSACTION_TYPE = 'FREEPLAY'
	AND 
		TM.DELETE_IND = 'N'
	AND TD.DELETE_IND = 'N'
	AND TM.MARKET_CD <> 'CH2'
	AND GUEST_UNIQUE_ID <> -1
	GROUP BY
		TM.TRIP_MASTER_ID,
		GUEST_UNIQUE_ID,
		FREEPLAY_TRIP_DAYS.GUEST_ACTIVITY_DATE
	)
	SELECT 
		DAS.GUEST_UNIQUE_ID,
		DAS.GUEST_ACTIVITY_DATE,
		ABS(SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN  DLC_FSP_POINT_AMT*MARKET_SIGN ELSE 0 END)) AS MARKET_DLC_FSP_POINT_AMT,
		ABS(SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN  DLC_FSP_POINT_AMT*ENTERPRISE_SIGN ELSE 0 END)) AS ENTERPRISE_DLC_FSP_POINT_AMT,
		ABS(SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN  DLC_FSP_DOLLAR_AMT*MARKET_SIGN ELSE 0 END)) AS MARKET_DLC_FSP_DOLLAR_AMT,
		ABS(SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN  DLC_FSP_DOLLAR_AMT*ENTERPRISE_SIGN ELSE 0 END)) AS ENTERPRISE_DLC_FSP_DOLLAR_AMT
	FROM 
		DAAS_CORE_MARKETING_VW.DAILY_ACTIVITY_SUMMARY_VW DAS
	JOIN 
		TRIP_GUEST_FREEPLAY TGF
	ON 
		DAS.TRIP_MASTER_ID = TGF.TRIP_MASTER_ID
	AND DAS.GUEST_ACTIVITY_DATE = TGF.GUEST_ACTIVITY_DATE
	GROUP BY 
		DAS.GUEST_UNIQUE_ID,
		DAS.GUEST_ACTIVITY_DATE
	HAVING 
	MARKET_DLC_FSP_POINT_AMT<>ENTERPRISE_DLC_FSP_POINT_AMT
	OR 
	MARKET_DLC_FSP_DOLLAR_AMT<>ENTERPRISE_DLC_FSP_DOLLAR_AMT)
	SELECT DISTINCT GUEST_UNIQUE_ID
	FROM FREEPLAY;` } );
				
	snowflake.execute( {sqlText: "COMMIT;" } );

	proc_output = "SUCCESS";
}	

catch (err) 
{ 
snowflake.execute( {sqlText: "ROLLBACK;" } );

proc_output += "\n Failed: Code: " + err.code + "\n  State: " + err.state;
proc_output += "\n  Message: " + err.message;
proc_output += "\nStack Trace:\n" + err.stackTraceTxt;
}
 
return proc_output;
$$;