CREATE OR REPLACE PROCEDURE DAAS_ADHOC.TRIP_METRICS_MISMATCHES_POS_ADHOC_REQUEST_PROC()
RETURNS VARCHAR NOT NULL
LANGUAGE JAVASCRIPT
EXECUTE AS OWNER
AS
$$

/*
#############################################################################################################
Author: Priyanka V
Purpose: This procedure will capture discrepancy guests from POS domain
Created Date: 08/30/2023
#############################################################################################################
*/

proc_output = "";
proc_step = "";

try
{
	snowflake.execute( {sqlText: "BEGIN;" } );

	/* Create temp table to store discrepancy Guests from TRIP_SUMMARY */
	
	snowflake.execute( {sqlText: `
	CREATE OR REPLACE TABLE DAAS_TEMP.POS_TS_DISCREPANCY_GUEST_IDS AS 
SELECT
	GUEST_UNIQUE_ID,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_SALES_GROSS_AMT ELSE 0 END) AS PROP_POS_SALES_GROSS_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_SALES_GROSS_AMT ELSE 0 END) AS MKT_POS_SALES_GROSS_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_SALES_GROSS_AMT ELSE 0 END) AS ENT_POS_SALES_GROSS_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_SALES_NET_AMT ELSE 0 END) AS PROP_POS_SALES_NET_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_SALES_NET_AMT ELSE 0 END) AS MKT_POS_SALES_NET_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_SALES_NET_AMT ELSE 0 END) AS ENT_POS_SALES_NET_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_DISCOUNT_AMT ELSE 0 END) AS PROP_POS_DISCOUNT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_DISCOUNT_AMT ELSE 0 END) AS MKT_POS_DISCOUNT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_DISCOUNT_AMT ELSE 0 END) AS ENT_POS_DISCOUNT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_TAX_AMT ELSE 0 END) AS PROP_POS_TAX_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_TAX_AMT ELSE 0 END) AS MKT_POS_TAX_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_TAX_AMT ELSE 0 END) AS ENT_POS_TAX_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_GRATUITY_AMT ELSE 0 END) AS PROP_POS_GRATUITY_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_GRATUITY_AMT ELSE 0 END) AS MKT_POS_GRATUITY_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_GRATUITY_AMT ELSE 0 END) AS ENT_POS_GRATUITY_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_TIP_AMT ELSE 0 END) AS PROP_POS_TIP_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_TIP_AMT ELSE 0 END) AS MKT_POS_TIP_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_TIP_AMT ELSE 0 END) AS ENT_POS_TIP_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_SERVICE_CHARGE_AMT ELSE 0 END) AS PROP_POS_SERVICE_CHARGE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_SERVICE_CHARGE_AMT ELSE 0 END) AS MKT_POS_SERVICE_CHARGE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_SERVICE_CHARGE_AMT ELSE 0 END) AS ENT_POS_SERVICE_CHARGE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_NBR_SECONDS_OPEN ELSE 0 END) AS PROP_POS_NBR_SECONDS_OPEN,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_NBR_SECONDS_OPEN ELSE 0 END) AS MKT_POS_NBR_SECONDS_OPEN,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_NBR_SECONDS_OPEN ELSE 0 END) AS ENT_POS_NBR_SECONDS_OPEN,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_TAXABLE_SALES_AMT ELSE 0 END) AS PROP_POS_TAXABLE_SALES_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_TAXABLE_SALES_AMT ELSE 0 END) AS MKT_POS_TAXABLE_SALES_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_TAXABLE_SALES_AMT ELSE 0 END) AS ENT_POS_TAXABLE_SALES_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_NONTAXABLE_SALES_AMT ELSE 0 END) AS PROP_POS_NONTAXABLE_SALES_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_NONTAXABLE_SALES_AMT ELSE 0 END) AS MKT_POS_NONTAXABLE_SALES_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_NONTAXABLE_SALES_AMT ELSE 0 END) AS ENT_POS_NONTAXABLE_SALES_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_TOTAL_SERVICE_CHARGE_AMT ELSE 0 END) AS PROP_POS_TOTAL_SERVICE_CHARGE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_TOTAL_SERVICE_CHARGE_AMT ELSE 0 END) AS MKT_POS_TOTAL_SERVICE_CHARGE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_TOTAL_SERVICE_CHARGE_AMT ELSE 0 END) AS ENT_POS_TOTAL_SERVICE_CHARGE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_FOOD_AMT ELSE 0 END) AS PROP_POS_FOOD_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_FOOD_AMT ELSE 0 END) AS MKT_POS_FOOD_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_FOOD_AMT ELSE 0 END) AS ENT_POS_FOOD_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_LIQUOR_AMT ELSE 0 END) AS PROP_POS_LIQUOR_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_LIQUOR_AMT ELSE 0 END) AS MKT_POS_LIQUOR_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_LIQUOR_AMT ELSE 0 END) AS ENT_POS_LIQUOR_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_BEER_AMT ELSE 0 END) AS PROP_POS_BEER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_BEER_AMT ELSE 0 END) AS MKT_POS_BEER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_BEER_AMT ELSE 0 END) AS ENT_POS_BEER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_WINE_AMT ELSE 0 END) AS PROP_POS_WINE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_WINE_AMT ELSE 0 END) AS MKT_POS_WINE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_WINE_AMT ELSE 0 END) AS ENT_POS_WINE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_RETAIL_AMT ELSE 0 END) AS PROP_POS_RETAIL_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_RETAIL_AMT ELSE 0 END) AS MKT_POS_RETAIL_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_RETAIL_AMT ELSE 0 END) AS ENT_POS_RETAIL_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_NA_BEV_AMT ELSE 0 END) AS PROP_POS_NA_BEV_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_NA_BEV_AMT ELSE 0 END) AS MKT_POS_NA_BEV_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_NA_BEV_AMT ELSE 0 END) AS ENT_POS_NA_BEV_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_TOBACCO_AMT ELSE 0 END) AS PROP_POS_TOBACCO_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_TOBACCO_AMT ELSE 0 END) AS MKT_POS_TOBACCO_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_TOBACCO_AMT ELSE 0 END) AS ENT_POS_TOBACCO_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_OTHER_AMT ELSE 0 END) AS PROP_POS_OTHER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_OTHER_AMT ELSE 0 END) AS MKT_POS_OTHER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_OTHER_AMT ELSE 0 END) AS ENT_POS_OTHER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_TOTAL_ITEM_AMT ELSE 0 END) AS PROP_POS_TOTAL_ITEM_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_TOTAL_ITEM_AMT ELSE 0 END) AS MKT_POS_TOTAL_ITEM_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_TOTAL_ITEM_AMT ELSE 0 END) AS ENT_POS_TOTAL_ITEM_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_NBR_LINE_ITEMS ELSE 0 END) AS PROP_POS_NBR_LINE_ITEMS,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_NBR_LINE_ITEMS ELSE 0 END) AS MKT_POS_NBR_LINE_ITEMS,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_NBR_LINE_ITEMS ELSE 0 END) AS ENT_POS_NBR_LINE_ITEMS,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_LINE_ITEM_QTY ELSE 0 END) AS PROP_POS_LINE_ITEM_QTY,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_LINE_ITEM_QTY ELSE 0 END) AS MKT_POS_LINE_ITEM_QTY,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_LINE_ITEM_QTY ELSE 0 END) AS ENT_POS_LINE_ITEM_QTY,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_COMP_TENDER_AMT ELSE 0 END) AS PROP_POS_COMP_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_COMP_TENDER_AMT ELSE 0 END) AS MKT_POS_COMP_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_COMP_TENDER_AMT ELSE 0 END) AS ENT_POS_COMP_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_CASH_TENDER_AMT ELSE 0 END) AS PROP_POS_CASH_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_CASH_TENDER_AMT ELSE 0 END) AS MKT_POS_CASH_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_CASH_TENDER_AMT ELSE 0 END) AS ENT_POS_CASH_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_ROOM_TENDER_AMT ELSE 0 END) AS PROP_POS_ROOM_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_ROOM_TENDER_AMT ELSE 0 END) AS MKT_POS_ROOM_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_ROOM_TENDER_AMT ELSE 0 END) AS ENT_POS_ROOM_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_OTHER_TENDER_AMT ELSE 0 END) AS PROP_POS_OTHER_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_OTHER_TENDER_AMT ELSE 0 END) AS MKT_POS_OTHER_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_OTHER_TENDER_AMT ELSE 0 END) AS ENT_POS_OTHER_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_TOTAL_TENDER_AMT ELSE 0 END) AS PROP_POS_TOTAL_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_TOTAL_TENDER_AMT ELSE 0 END) AS MKT_POS_TOTAL_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_TOTAL_TENDER_AMT ELSE 0 END) AS ENT_POS_TOTAL_TENDER_AMT
FROM
	DAAS_CORE_MARKETING_VW.TRIP_SUMMARY_VW
WHERE
	GUEST_UNIQUE_ID <> -1
GROUP BY 
	GUEST_UNIQUE_ID
HAVING 
( PROP_POS_SALES_GROSS_AMT  <> MKT_POS_SALES_GROSS_AMT  OR MKT_POS_SALES_GROSS_AMT  <> ENT_POS_SALES_GROSS_AMT  OR ENT_POS_SALES_GROSS_AMT  <> PROP_POS_SALES_GROSS_AMT ) OR
( PROP_POS_SALES_NET_AMT  <> MKT_POS_SALES_NET_AMT  OR MKT_POS_SALES_NET_AMT  <> ENT_POS_SALES_NET_AMT  OR ENT_POS_SALES_NET_AMT  <> PROP_POS_SALES_NET_AMT ) OR
( PROP_POS_DISCOUNT_AMT  <> MKT_POS_DISCOUNT_AMT  OR MKT_POS_DISCOUNT_AMT  <> ENT_POS_DISCOUNT_AMT  OR ENT_POS_DISCOUNT_AMT  <> PROP_POS_DISCOUNT_AMT ) OR
( PROP_POS_TAX_AMT  <> MKT_POS_TAX_AMT  OR MKT_POS_TAX_AMT  <> ENT_POS_TAX_AMT  OR ENT_POS_TAX_AMT  <> PROP_POS_TAX_AMT ) OR
( PROP_POS_GRATUITY_AMT  <> MKT_POS_GRATUITY_AMT  OR MKT_POS_GRATUITY_AMT  <> ENT_POS_GRATUITY_AMT  OR ENT_POS_GRATUITY_AMT  <> PROP_POS_GRATUITY_AMT ) OR
( PROP_POS_TIP_AMT  <> MKT_POS_TIP_AMT  OR MKT_POS_TIP_AMT  <> ENT_POS_TIP_AMT  OR ENT_POS_TIP_AMT  <> PROP_POS_TIP_AMT ) OR
( PROP_POS_SERVICE_CHARGE_AMT  <> MKT_POS_SERVICE_CHARGE_AMT  OR MKT_POS_SERVICE_CHARGE_AMT  <> ENT_POS_SERVICE_CHARGE_AMT  OR ENT_POS_SERVICE_CHARGE_AMT  <> PROP_POS_SERVICE_CHARGE_AMT ) OR
( PROP_POS_NBR_SECONDS_OPEN  <> MKT_POS_NBR_SECONDS_OPEN  OR MKT_POS_NBR_SECONDS_OPEN  <> ENT_POS_NBR_SECONDS_OPEN  OR ENT_POS_NBR_SECONDS_OPEN  <> PROP_POS_NBR_SECONDS_OPEN ) OR
( PROP_POS_TAXABLE_SALES_AMT  <> MKT_POS_TAXABLE_SALES_AMT  OR MKT_POS_TAXABLE_SALES_AMT  <> ENT_POS_TAXABLE_SALES_AMT  OR ENT_POS_TAXABLE_SALES_AMT  <> PROP_POS_TAXABLE_SALES_AMT ) OR
( PROP_POS_NONTAXABLE_SALES_AMT  <> MKT_POS_NONTAXABLE_SALES_AMT  OR MKT_POS_NONTAXABLE_SALES_AMT  <> ENT_POS_NONTAXABLE_SALES_AMT  OR ENT_POS_NONTAXABLE_SALES_AMT  <> PROP_POS_NONTAXABLE_SALES_AMT ) OR
( PROP_POS_TOTAL_SERVICE_CHARGE_AMT  <> MKT_POS_TOTAL_SERVICE_CHARGE_AMT  OR MKT_POS_TOTAL_SERVICE_CHARGE_AMT  <> ENT_POS_TOTAL_SERVICE_CHARGE_AMT  OR ENT_POS_TOTAL_SERVICE_CHARGE_AMT  <> PROP_POS_TOTAL_SERVICE_CHARGE_AMT ) OR
( PROP_POS_FOOD_AMT  <> MKT_POS_FOOD_AMT  OR MKT_POS_FOOD_AMT  <> ENT_POS_FOOD_AMT  OR ENT_POS_FOOD_AMT  <> PROP_POS_FOOD_AMT ) OR
( PROP_POS_LIQUOR_AMT  <> MKT_POS_LIQUOR_AMT  OR MKT_POS_LIQUOR_AMT  <> ENT_POS_LIQUOR_AMT  OR ENT_POS_LIQUOR_AMT  <> PROP_POS_LIQUOR_AMT ) OR
( PROP_POS_BEER_AMT  <> MKT_POS_BEER_AMT  OR MKT_POS_BEER_AMT  <> ENT_POS_BEER_AMT  OR ENT_POS_BEER_AMT  <> PROP_POS_BEER_AMT ) OR
( PROP_POS_WINE_AMT  <> MKT_POS_WINE_AMT  OR MKT_POS_WINE_AMT  <> ENT_POS_WINE_AMT  OR ENT_POS_WINE_AMT  <> PROP_POS_WINE_AMT ) OR
( PROP_POS_RETAIL_AMT  <> MKT_POS_RETAIL_AMT  OR MKT_POS_RETAIL_AMT  <> ENT_POS_RETAIL_AMT  OR ENT_POS_RETAIL_AMT  <> PROP_POS_RETAIL_AMT ) OR
( PROP_POS_NA_BEV_AMT  <> MKT_POS_NA_BEV_AMT  OR MKT_POS_NA_BEV_AMT  <> ENT_POS_NA_BEV_AMT  OR ENT_POS_NA_BEV_AMT  <> PROP_POS_NA_BEV_AMT ) OR
( PROP_POS_TOBACCO_AMT  <> MKT_POS_TOBACCO_AMT  OR MKT_POS_TOBACCO_AMT  <> ENT_POS_TOBACCO_AMT  OR ENT_POS_TOBACCO_AMT  <> PROP_POS_TOBACCO_AMT ) OR
( PROP_POS_OTHER_AMT  <> MKT_POS_OTHER_AMT  OR MKT_POS_OTHER_AMT  <> ENT_POS_OTHER_AMT  OR ENT_POS_OTHER_AMT  <> PROP_POS_OTHER_AMT ) OR
( PROP_POS_TOTAL_ITEM_AMT  <> MKT_POS_TOTAL_ITEM_AMT  OR MKT_POS_TOTAL_ITEM_AMT  <> ENT_POS_TOTAL_ITEM_AMT  OR ENT_POS_TOTAL_ITEM_AMT  <> PROP_POS_TOTAL_ITEM_AMT ) OR
( PROP_POS_NBR_LINE_ITEMS  <> MKT_POS_NBR_LINE_ITEMS  OR MKT_POS_NBR_LINE_ITEMS  <> ENT_POS_NBR_LINE_ITEMS  OR ENT_POS_NBR_LINE_ITEMS  <> PROP_POS_NBR_LINE_ITEMS ) OR
( PROP_POS_LINE_ITEM_QTY  <> MKT_POS_LINE_ITEM_QTY  OR MKT_POS_LINE_ITEM_QTY  <> ENT_POS_LINE_ITEM_QTY  OR ENT_POS_LINE_ITEM_QTY  <> PROP_POS_LINE_ITEM_QTY ) OR
( PROP_POS_COMP_TENDER_AMT  <> MKT_POS_COMP_TENDER_AMT  OR MKT_POS_COMP_TENDER_AMT  <> ENT_POS_COMP_TENDER_AMT  OR ENT_POS_COMP_TENDER_AMT  <> PROP_POS_COMP_TENDER_AMT ) OR
( PROP_POS_CASH_TENDER_AMT  <> MKT_POS_CASH_TENDER_AMT  OR MKT_POS_CASH_TENDER_AMT  <> ENT_POS_CASH_TENDER_AMT  OR ENT_POS_CASH_TENDER_AMT  <> PROP_POS_CASH_TENDER_AMT ) OR
( PROP_POS_ROOM_TENDER_AMT  <> MKT_POS_ROOM_TENDER_AMT  OR MKT_POS_ROOM_TENDER_AMT  <> ENT_POS_ROOM_TENDER_AMT  OR ENT_POS_ROOM_TENDER_AMT  <> PROP_POS_ROOM_TENDER_AMT ) OR
( PROP_POS_OTHER_TENDER_AMT  <> MKT_POS_OTHER_TENDER_AMT  OR MKT_POS_OTHER_TENDER_AMT  <> ENT_POS_OTHER_TENDER_AMT  OR ENT_POS_OTHER_TENDER_AMT  <> PROP_POS_OTHER_TENDER_AMT ) OR
( PROP_POS_TOTAL_TENDER_AMT  <> MKT_POS_TOTAL_TENDER_AMT  OR MKT_POS_TOTAL_TENDER_AMT  <> ENT_POS_TOTAL_TENDER_AMT  OR ENT_POS_TOTAL_TENDER_AMT  <> PROP_POS_TOTAL_TENDER_AMT 
);` } );


	/* Create temp table to store discrepancy Guests from DAILY_ACTIVITY_SUMMARY */

	snowflake.execute( {sqlText: `
	CREATE OR REPLACE TABLE DAAS_TEMP.POS_DAS_DISCREPANCY_GUEST_IDS AS
	SELECT
	GUEST_UNIQUE_ID,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_SALES_GROSS_AMT ELSE 0 END) AS PROP_POS_SALES_GROSS_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_SALES_GROSS_AMT ELSE 0 END) AS MKT_POS_SALES_GROSS_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_SALES_GROSS_AMT ELSE 0 END) AS ENT_POS_SALES_GROSS_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_SALES_NET_AMT ELSE 0 END) AS PROP_POS_SALES_NET_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_SALES_NET_AMT ELSE 0 END) AS MKT_POS_SALES_NET_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_SALES_NET_AMT ELSE 0 END) AS ENT_POS_SALES_NET_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_DISCOUNT_AMT ELSE 0 END) AS PROP_POS_DISCOUNT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_DISCOUNT_AMT ELSE 0 END) AS MKT_POS_DISCOUNT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_DISCOUNT_AMT ELSE 0 END) AS ENT_POS_DISCOUNT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_TAX_AMT ELSE 0 END) AS PROP_POS_TAX_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_TAX_AMT ELSE 0 END) AS MKT_POS_TAX_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_TAX_AMT ELSE 0 END) AS ENT_POS_TAX_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_GRATUITY_AMT ELSE 0 END) AS PROP_POS_GRATUITY_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_GRATUITY_AMT ELSE 0 END) AS MKT_POS_GRATUITY_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_GRATUITY_AMT ELSE 0 END) AS ENT_POS_GRATUITY_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_TIP_AMT ELSE 0 END) AS PROP_POS_TIP_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_TIP_AMT ELSE 0 END) AS MKT_POS_TIP_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_TIP_AMT ELSE 0 END) AS ENT_POS_TIP_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_SERVICE_CHARGE_AMT ELSE 0 END) AS PROP_POS_SERVICE_CHARGE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_SERVICE_CHARGE_AMT ELSE 0 END) AS MKT_POS_SERVICE_CHARGE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_SERVICE_CHARGE_AMT ELSE 0 END) AS ENT_POS_SERVICE_CHARGE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_NBR_SECONDS_OPEN ELSE 0 END) AS PROP_POS_NBR_SECONDS_OPEN,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_NBR_SECONDS_OPEN ELSE 0 END) AS MKT_POS_NBR_SECONDS_OPEN,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_NBR_SECONDS_OPEN ELSE 0 END) AS ENT_POS_NBR_SECONDS_OPEN,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_TAXABLE_SALES_AMT ELSE 0 END) AS PROP_POS_TAXABLE_SALES_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_TAXABLE_SALES_AMT ELSE 0 END) AS MKT_POS_TAXABLE_SALES_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_TAXABLE_SALES_AMT ELSE 0 END) AS ENT_POS_TAXABLE_SALES_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_NONTAXABLE_SALES_AMT ELSE 0 END) AS PROP_POS_NONTAXABLE_SALES_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_NONTAXABLE_SALES_AMT ELSE 0 END) AS MKT_POS_NONTAXABLE_SALES_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_NONTAXABLE_SALES_AMT ELSE 0 END) AS ENT_POS_NONTAXABLE_SALES_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_TOTAL_SERVICE_CHARGE_AMT ELSE 0 END) AS PROP_POS_TOTAL_SERVICE_CHARGE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_TOTAL_SERVICE_CHARGE_AMT ELSE 0 END) AS MKT_POS_TOTAL_SERVICE_CHARGE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_TOTAL_SERVICE_CHARGE_AMT ELSE 0 END) AS ENT_POS_TOTAL_SERVICE_CHARGE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_FOOD_AMT ELSE 0 END) AS PROP_POS_FOOD_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_FOOD_AMT ELSE 0 END) AS MKT_POS_FOOD_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_FOOD_AMT ELSE 0 END) AS ENT_POS_FOOD_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_LIQUOR_AMT ELSE 0 END) AS PROP_POS_LIQUOR_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_LIQUOR_AMT ELSE 0 END) AS MKT_POS_LIQUOR_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_LIQUOR_AMT ELSE 0 END) AS ENT_POS_LIQUOR_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_BEER_AMT ELSE 0 END) AS PROP_POS_BEER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_BEER_AMT ELSE 0 END) AS MKT_POS_BEER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_BEER_AMT ELSE 0 END) AS ENT_POS_BEER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_WINE_AMT ELSE 0 END) AS PROP_POS_WINE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_WINE_AMT ELSE 0 END) AS MKT_POS_WINE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_WINE_AMT ELSE 0 END) AS ENT_POS_WINE_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_RETAIL_AMT ELSE 0 END) AS PROP_POS_RETAIL_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_RETAIL_AMT ELSE 0 END) AS MKT_POS_RETAIL_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_RETAIL_AMT ELSE 0 END) AS ENT_POS_RETAIL_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_NA_BEV_AMT ELSE 0 END) AS PROP_POS_NA_BEV_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_NA_BEV_AMT ELSE 0 END) AS MKT_POS_NA_BEV_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_NA_BEV_AMT ELSE 0 END) AS ENT_POS_NA_BEV_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_TOBACCO_AMT ELSE 0 END) AS PROP_POS_TOBACCO_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_TOBACCO_AMT ELSE 0 END) AS MKT_POS_TOBACCO_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_TOBACCO_AMT ELSE 0 END) AS ENT_POS_TOBACCO_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_OTHER_AMT ELSE 0 END) AS PROP_POS_OTHER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_OTHER_AMT ELSE 0 END) AS MKT_POS_OTHER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_OTHER_AMT ELSE 0 END) AS ENT_POS_OTHER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_TOTAL_ITEM_AMT ELSE 0 END) AS PROP_POS_TOTAL_ITEM_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_TOTAL_ITEM_AMT ELSE 0 END) AS MKT_POS_TOTAL_ITEM_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_TOTAL_ITEM_AMT ELSE 0 END) AS ENT_POS_TOTAL_ITEM_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_NBR_LINE_ITEMS ELSE 0 END) AS PROP_POS_NBR_LINE_ITEMS,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_NBR_LINE_ITEMS ELSE 0 END) AS MKT_POS_NBR_LINE_ITEMS,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_NBR_LINE_ITEMS ELSE 0 END) AS ENT_POS_NBR_LINE_ITEMS,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_LINE_ITEM_QTY ELSE 0 END) AS PROP_POS_LINE_ITEM_QTY,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_LINE_ITEM_QTY ELSE 0 END) AS MKT_POS_LINE_ITEM_QTY,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_LINE_ITEM_QTY ELSE 0 END) AS ENT_POS_LINE_ITEM_QTY,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_COMP_TENDER_AMT ELSE 0 END) AS PROP_POS_COMP_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_COMP_TENDER_AMT ELSE 0 END) AS MKT_POS_COMP_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_COMP_TENDER_AMT ELSE 0 END) AS ENT_POS_COMP_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_CASH_TENDER_AMT ELSE 0 END) AS PROP_POS_CASH_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_CASH_TENDER_AMT ELSE 0 END) AS MKT_POS_CASH_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_CASH_TENDER_AMT ELSE 0 END) AS ENT_POS_CASH_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_ROOM_TENDER_AMT ELSE 0 END) AS PROP_POS_ROOM_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_ROOM_TENDER_AMT ELSE 0 END) AS MKT_POS_ROOM_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_ROOM_TENDER_AMT ELSE 0 END) AS ENT_POS_ROOM_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_OTHER_TENDER_AMT ELSE 0 END) AS PROP_POS_OTHER_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_OTHER_TENDER_AMT ELSE 0 END) AS MKT_POS_OTHER_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_OTHER_TENDER_AMT ELSE 0 END) AS ENT_POS_OTHER_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN POS_TOTAL_TENDER_AMT ELSE 0 END) AS PROP_POS_TOTAL_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN POS_TOTAL_TENDER_AMT ELSE 0 END) AS MKT_POS_TOTAL_TENDER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN POS_TOTAL_TENDER_AMT ELSE 0 END) AS ENT_POS_TOTAL_TENDER_AMT
FROM
	DAAS_CORE_MARKETING_VW.DAILY_ACTIVITY_SUMMARY_VW
WHERE
	GUEST_UNIQUE_ID <> -1
GROUP BY 
	GUEST_UNIQUE_ID
HAVING 
( PROP_POS_SALES_GROSS_AMT  <> MKT_POS_SALES_GROSS_AMT  OR MKT_POS_SALES_GROSS_AMT  <> ENT_POS_SALES_GROSS_AMT  OR ENT_POS_SALES_GROSS_AMT  <> PROP_POS_SALES_GROSS_AMT ) OR
( PROP_POS_SALES_NET_AMT  <> MKT_POS_SALES_NET_AMT  OR MKT_POS_SALES_NET_AMT  <> ENT_POS_SALES_NET_AMT  OR ENT_POS_SALES_NET_AMT  <> PROP_POS_SALES_NET_AMT ) OR
( PROP_POS_DISCOUNT_AMT  <> MKT_POS_DISCOUNT_AMT  OR MKT_POS_DISCOUNT_AMT  <> ENT_POS_DISCOUNT_AMT  OR ENT_POS_DISCOUNT_AMT  <> PROP_POS_DISCOUNT_AMT ) OR
( PROP_POS_TAX_AMT  <> MKT_POS_TAX_AMT  OR MKT_POS_TAX_AMT  <> ENT_POS_TAX_AMT  OR ENT_POS_TAX_AMT  <> PROP_POS_TAX_AMT ) OR
( PROP_POS_GRATUITY_AMT  <> MKT_POS_GRATUITY_AMT  OR MKT_POS_GRATUITY_AMT  <> ENT_POS_GRATUITY_AMT  OR ENT_POS_GRATUITY_AMT  <> PROP_POS_GRATUITY_AMT ) OR
( PROP_POS_TIP_AMT  <> MKT_POS_TIP_AMT  OR MKT_POS_TIP_AMT  <> ENT_POS_TIP_AMT  OR ENT_POS_TIP_AMT  <> PROP_POS_TIP_AMT ) OR
( PROP_POS_SERVICE_CHARGE_AMT  <> MKT_POS_SERVICE_CHARGE_AMT  OR MKT_POS_SERVICE_CHARGE_AMT  <> ENT_POS_SERVICE_CHARGE_AMT  OR ENT_POS_SERVICE_CHARGE_AMT  <> PROP_POS_SERVICE_CHARGE_AMT ) OR
( PROP_POS_NBR_SECONDS_OPEN  <> MKT_POS_NBR_SECONDS_OPEN  OR MKT_POS_NBR_SECONDS_OPEN  <> ENT_POS_NBR_SECONDS_OPEN  OR ENT_POS_NBR_SECONDS_OPEN  <> PROP_POS_NBR_SECONDS_OPEN ) OR
( PROP_POS_TAXABLE_SALES_AMT  <> MKT_POS_TAXABLE_SALES_AMT  OR MKT_POS_TAXABLE_SALES_AMT  <> ENT_POS_TAXABLE_SALES_AMT  OR ENT_POS_TAXABLE_SALES_AMT  <> PROP_POS_TAXABLE_SALES_AMT ) OR
( PROP_POS_NONTAXABLE_SALES_AMT  <> MKT_POS_NONTAXABLE_SALES_AMT  OR MKT_POS_NONTAXABLE_SALES_AMT  <> ENT_POS_NONTAXABLE_SALES_AMT  OR ENT_POS_NONTAXABLE_SALES_AMT  <> PROP_POS_NONTAXABLE_SALES_AMT ) OR
( PROP_POS_TOTAL_SERVICE_CHARGE_AMT  <> MKT_POS_TOTAL_SERVICE_CHARGE_AMT  OR MKT_POS_TOTAL_SERVICE_CHARGE_AMT  <> ENT_POS_TOTAL_SERVICE_CHARGE_AMT  OR ENT_POS_TOTAL_SERVICE_CHARGE_AMT  <> PROP_POS_TOTAL_SERVICE_CHARGE_AMT ) OR
( PROP_POS_FOOD_AMT  <> MKT_POS_FOOD_AMT  OR MKT_POS_FOOD_AMT  <> ENT_POS_FOOD_AMT  OR ENT_POS_FOOD_AMT  <> PROP_POS_FOOD_AMT ) OR
( PROP_POS_LIQUOR_AMT  <> MKT_POS_LIQUOR_AMT  OR MKT_POS_LIQUOR_AMT  <> ENT_POS_LIQUOR_AMT  OR ENT_POS_LIQUOR_AMT  <> PROP_POS_LIQUOR_AMT ) OR
( PROP_POS_BEER_AMT  <> MKT_POS_BEER_AMT  OR MKT_POS_BEER_AMT  <> ENT_POS_BEER_AMT  OR ENT_POS_BEER_AMT  <> PROP_POS_BEER_AMT ) OR
( PROP_POS_WINE_AMT  <> MKT_POS_WINE_AMT  OR MKT_POS_WINE_AMT  <> ENT_POS_WINE_AMT  OR ENT_POS_WINE_AMT  <> PROP_POS_WINE_AMT ) OR
( PROP_POS_RETAIL_AMT  <> MKT_POS_RETAIL_AMT  OR MKT_POS_RETAIL_AMT  <> ENT_POS_RETAIL_AMT  OR ENT_POS_RETAIL_AMT  <> PROP_POS_RETAIL_AMT ) OR
( PROP_POS_NA_BEV_AMT  <> MKT_POS_NA_BEV_AMT  OR MKT_POS_NA_BEV_AMT  <> ENT_POS_NA_BEV_AMT  OR ENT_POS_NA_BEV_AMT  <> PROP_POS_NA_BEV_AMT ) OR
( PROP_POS_TOBACCO_AMT  <> MKT_POS_TOBACCO_AMT  OR MKT_POS_TOBACCO_AMT  <> ENT_POS_TOBACCO_AMT  OR ENT_POS_TOBACCO_AMT  <> PROP_POS_TOBACCO_AMT ) OR
( PROP_POS_OTHER_AMT  <> MKT_POS_OTHER_AMT  OR MKT_POS_OTHER_AMT  <> ENT_POS_OTHER_AMT  OR ENT_POS_OTHER_AMT  <> PROP_POS_OTHER_AMT ) OR
( PROP_POS_TOTAL_ITEM_AMT  <> MKT_POS_TOTAL_ITEM_AMT  OR MKT_POS_TOTAL_ITEM_AMT  <> ENT_POS_TOTAL_ITEM_AMT  OR ENT_POS_TOTAL_ITEM_AMT  <> PROP_POS_TOTAL_ITEM_AMT ) OR
( PROP_POS_NBR_LINE_ITEMS  <> MKT_POS_NBR_LINE_ITEMS  OR MKT_POS_NBR_LINE_ITEMS  <> ENT_POS_NBR_LINE_ITEMS  OR ENT_POS_NBR_LINE_ITEMS  <> PROP_POS_NBR_LINE_ITEMS ) OR
( PROP_POS_LINE_ITEM_QTY  <> MKT_POS_LINE_ITEM_QTY  OR MKT_POS_LINE_ITEM_QTY  <> ENT_POS_LINE_ITEM_QTY  OR ENT_POS_LINE_ITEM_QTY  <> PROP_POS_LINE_ITEM_QTY ) OR
( PROP_POS_COMP_TENDER_AMT  <> MKT_POS_COMP_TENDER_AMT  OR MKT_POS_COMP_TENDER_AMT  <> ENT_POS_COMP_TENDER_AMT  OR ENT_POS_COMP_TENDER_AMT  <> PROP_POS_COMP_TENDER_AMT ) OR
( PROP_POS_CASH_TENDER_AMT  <> MKT_POS_CASH_TENDER_AMT  OR MKT_POS_CASH_TENDER_AMT  <> ENT_POS_CASH_TENDER_AMT  OR ENT_POS_CASH_TENDER_AMT  <> PROP_POS_CASH_TENDER_AMT ) OR
( PROP_POS_ROOM_TENDER_AMT  <> MKT_POS_ROOM_TENDER_AMT  OR MKT_POS_ROOM_TENDER_AMT  <> ENT_POS_ROOM_TENDER_AMT  OR ENT_POS_ROOM_TENDER_AMT  <> PROP_POS_ROOM_TENDER_AMT ) OR
( PROP_POS_OTHER_TENDER_AMT  <> MKT_POS_OTHER_TENDER_AMT  OR MKT_POS_OTHER_TENDER_AMT  <> ENT_POS_OTHER_TENDER_AMT  OR ENT_POS_OTHER_TENDER_AMT  <> PROP_POS_OTHER_TENDER_AMT ) OR
( PROP_POS_TOTAL_TENDER_AMT  <> MKT_POS_TOTAL_TENDER_AMT  OR MKT_POS_TOTAL_TENDER_AMT  <> ENT_POS_TOTAL_TENDER_AMT  OR ENT_POS_TOTAL_TENDER_AMT  <> PROP_POS_TOTAL_TENDER_AMT 
);` } );
	
	
	/* Combine both temp tables and get distinct Guests */
	
	snowflake.execute( {sqlText: `
	CREATE OR REPLACE TABLE DAAS_TEMP.POS_DISCREPANCY_GUEST_IDS AS
	SELECT GUEST_UNIQUE_ID FROM DAAS_TEMP.POS_TS_DISCREPANCY_GUEST_IDS
	UNION
	SELECT GUEST_UNIQUE_ID FROM DAAS_TEMP.POS_DAS_DISCREPANCY_GUEST_IDS
	;` } );	
	

	snowflake.execute( {sqlText: "COMMIT;" } );

	proc_output = "SUCCESS";
}	

catch (err) 
{ 
snowflake.execute( {sqlText: "ROLLBACK;" } );

proc_output += "\n Failed: Code: " + err.code + "\n  State: " + err.state;
proc_output += "\n  Message: " + err.message;
proc_output += "\nStack Trace:\n" + err.stackTraceTxt;
}
 
return proc_output;
$$;