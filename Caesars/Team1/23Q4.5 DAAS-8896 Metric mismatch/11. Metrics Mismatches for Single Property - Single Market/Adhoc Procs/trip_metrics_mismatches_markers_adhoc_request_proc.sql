CREATE OR REPLACE PROCEDURE DAAS_ADHOC.TRIP_METRICS_MISMATCHES_MARKERS_ADHOC_REQUEST_PROC()
RETURNS VARCHAR NOT NULL
LANGUAGE JAVASCRIPT
EXECUTE AS OWNER
AS
$$

/*
#############################################################################################################
Author: Hemanth
Purpose: This procedure will capture discrepancy guests from MARKERS domain
Created Date: 08/30/2023
#############################################################################################################
*/

proc_output = "";
proc_step = "";

try
{
	snowflake.execute( {sqlText: "BEGIN;" } );

	/* Create temp table to store discrepancy Guests from TRIP_SUMMARY */
	
	snowflake.execute( {sqlText: `
	CREATE OR REPLACE TABLE DAAS_TEMP.MARKERS_TS_DISCREPANCY_GUEST_IDS AS 
	SELECT
	GUEST_UNIQUE_ID,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN TABLE_MARKER_AMT ELSE 0 END) AS PROP_TABLE_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN TABLE_MARKER_AMT ELSE 0 END) AS MKT_TABLE_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN TABLE_MARKER_AMT ELSE 0 END) AS ENT_TABLE_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN SLOT_MARKER_AMT ELSE 0 END) AS PROP_SLOT_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN SLOT_MARKER_AMT ELSE 0 END) AS MKT_SLOT_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN SLOT_MARKER_AMT ELSE 0 END) AS ENT_SLOT_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN OTHER_MARKER_AMT ELSE 0 END) AS PROP_OTHER_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN OTHER_MARKER_AMT ELSE 0 END) AS MKT_OTHER_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN OTHER_MARKER_AMT ELSE 0 END) AS ENT_OTHER_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN TABLE_SFK_DEPOSIT_AMT ELSE 0 END) AS PROP_TABLE_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN TABLE_SFK_DEPOSIT_AMT ELSE 0 END) AS MKT_TABLE_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN TABLE_SFK_DEPOSIT_AMT ELSE 0 END) AS ENT_TABLE_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN SLOT_SFK_DEPOSIT_AMT ELSE 0 END) AS PROP_SLOT_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN SLOT_SFK_DEPOSIT_AMT ELSE 0 END) AS MKT_SLOT_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN SLOT_SFK_DEPOSIT_AMT ELSE 0 END) AS ENT_SLOT_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN OTHER_SFK_DEPOSIT_AMT ELSE 0 END) AS PROP_OTHER_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN OTHER_SFK_DEPOSIT_AMT ELSE 0 END) AS MKT_OTHER_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN OTHER_SFK_DEPOSIT_AMT ELSE 0 END) AS ENT_OTHER_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN TOTAL_SFKCCK_AMT ELSE 0 END) AS PROP_TOTAL_SFKCCK_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN TOTAL_SFKCCK_AMT ELSE 0 END) AS MKT_TOTAL_SFKCCK_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN TOTAL_SFKCCK_AMT ELSE 0 END) AS ENT_TOTAL_SFKCCK_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN TOTAL_SFK_DEPOSIT_AMT ELSE 0 END) AS PROP_TOTAL_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN TOTAL_SFK_DEPOSIT_AMT ELSE 0 END) AS MKT_TOTAL_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN TOTAL_SFK_DEPOSIT_AMT ELSE 0 END) AS ENT_TOTAL_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN TABLE_NBR_MARKER_TRX ELSE 0 END) AS PROP_TABLE_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN TABLE_NBR_MARKER_TRX ELSE 0 END) AS MKT_TABLE_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN TABLE_NBR_MARKER_TRX ELSE 0 END) AS ENT_TABLE_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN SLOT_NBR_MARKER_TRX ELSE 0 END) AS PROP_SLOT_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN SLOT_NBR_MARKER_TRX ELSE 0 END) AS MKT_SLOT_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN SLOT_NBR_MARKER_TRX ELSE 0 END) AS ENT_SLOT_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN OTHER_NBR_MARKER_TRX ELSE 0 END) AS PROP_OTHER_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN OTHER_NBR_MARKER_TRX ELSE 0 END) AS MKT_OTHER_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN OTHER_NBR_MARKER_TRX ELSE 0 END) AS ENT_OTHER_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN TABLE_NBR_SFK_TRX ELSE 0 END) AS PROP_TABLE_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN TABLE_NBR_SFK_TRX ELSE 0 END) AS MKT_TABLE_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN TABLE_NBR_SFK_TRX ELSE 0 END) AS ENT_TABLE_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN SLOT_NBR_SFK_TRX ELSE 0 END) AS PROP_SLOT_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN SLOT_NBR_SFK_TRX ELSE 0 END) AS MKT_SLOT_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN SLOT_NBR_SFK_TRX ELSE 0 END) AS ENT_SLOT_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN OTHER_NBR_SFK_TRX ELSE 0 END) AS PROP_OTHER_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN OTHER_NBR_SFK_TRX ELSE 0 END) AS MKT_OTHER_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN OTHER_NBR_SFK_TRX ELSE 0 END) AS ENT_OTHER_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN TOTAL_NBR_SFKCCK_TRX ELSE 0 END) AS PROP_TOTAL_NBR_SFKCCK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN TOTAL_NBR_SFKCCK_TRX ELSE 0 END) AS MKT_TOTAL_NBR_SFKCCK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN TOTAL_NBR_SFKCCK_TRX ELSE 0 END) AS ENT_TOTAL_NBR_SFKCCK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN TOTAL_NBR_SFK_DEPOSIT_TRX ELSE 0 END) AS PROP_TOTAL_NBR_SFK_DEPOSIT_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN TOTAL_NBR_SFK_DEPOSIT_TRX ELSE 0 END) AS MKT_TOTAL_NBR_SFK_DEPOSIT_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN TOTAL_NBR_SFK_DEPOSIT_TRX ELSE 0 END) AS ENT_TOTAL_NBR_SFK_DEPOSIT_TRX
FROM
	DAAS_CORE_MARKETING_VW.TRIP_SUMMARY_VW
WHERE
	GUEST_UNIQUE_ID <> -1
GROUP BY 
	GUEST_UNIQUE_ID
HAVING 
( PROP_TABLE_MARKER_AMT  <> MKT_TABLE_MARKER_AMT  OR MKT_TABLE_MARKER_AMT  <> ENT_TABLE_MARKER_AMT  OR ENT_TABLE_MARKER_AMT  <> PROP_TABLE_MARKER_AMT ) OR
( PROP_SLOT_MARKER_AMT  <> MKT_SLOT_MARKER_AMT  OR MKT_SLOT_MARKER_AMT  <> ENT_SLOT_MARKER_AMT  OR ENT_SLOT_MARKER_AMT  <> PROP_SLOT_MARKER_AMT ) OR
( PROP_OTHER_MARKER_AMT  <> MKT_OTHER_MARKER_AMT  OR MKT_OTHER_MARKER_AMT  <> ENT_OTHER_MARKER_AMT  OR ENT_OTHER_MARKER_AMT  <> PROP_OTHER_MARKER_AMT ) OR
( PROP_TABLE_SFK_DEPOSIT_AMT  <> MKT_TABLE_SFK_DEPOSIT_AMT  OR MKT_TABLE_SFK_DEPOSIT_AMT  <> ENT_TABLE_SFK_DEPOSIT_AMT  OR ENT_TABLE_SFK_DEPOSIT_AMT  <> PROP_TABLE_SFK_DEPOSIT_AMT ) OR
( PROP_SLOT_SFK_DEPOSIT_AMT  <> MKT_SLOT_SFK_DEPOSIT_AMT  OR MKT_SLOT_SFK_DEPOSIT_AMT  <> ENT_SLOT_SFK_DEPOSIT_AMT  OR ENT_SLOT_SFK_DEPOSIT_AMT  <> PROP_SLOT_SFK_DEPOSIT_AMT ) OR
( PROP_OTHER_SFK_DEPOSIT_AMT  <> MKT_OTHER_SFK_DEPOSIT_AMT  OR MKT_OTHER_SFK_DEPOSIT_AMT  <> ENT_OTHER_SFK_DEPOSIT_AMT  OR ENT_OTHER_SFK_DEPOSIT_AMT  <> PROP_OTHER_SFK_DEPOSIT_AMT ) OR
( PROP_TOTAL_SFKCCK_AMT  <> MKT_TOTAL_SFKCCK_AMT  OR MKT_TOTAL_SFKCCK_AMT  <> ENT_TOTAL_SFKCCK_AMT  OR ENT_TOTAL_SFKCCK_AMT  <> PROP_TOTAL_SFKCCK_AMT ) OR
( PROP_TOTAL_SFK_DEPOSIT_AMT  <> MKT_TOTAL_SFK_DEPOSIT_AMT  OR MKT_TOTAL_SFK_DEPOSIT_AMT  <> ENT_TOTAL_SFK_DEPOSIT_AMT  OR ENT_TOTAL_SFK_DEPOSIT_AMT  <> PROP_TOTAL_SFK_DEPOSIT_AMT ) OR
( PROP_TABLE_NBR_MARKER_TRX  <> MKT_TABLE_NBR_MARKER_TRX  OR MKT_TABLE_NBR_MARKER_TRX  <> ENT_TABLE_NBR_MARKER_TRX  OR ENT_TABLE_NBR_MARKER_TRX  <> PROP_TABLE_NBR_MARKER_TRX ) OR
( PROP_SLOT_NBR_MARKER_TRX  <> MKT_SLOT_NBR_MARKER_TRX  OR MKT_SLOT_NBR_MARKER_TRX  <> ENT_SLOT_NBR_MARKER_TRX  OR ENT_SLOT_NBR_MARKER_TRX  <> PROP_SLOT_NBR_MARKER_TRX ) OR
( PROP_OTHER_NBR_MARKER_TRX  <> MKT_OTHER_NBR_MARKER_TRX  OR MKT_OTHER_NBR_MARKER_TRX  <> ENT_OTHER_NBR_MARKER_TRX  OR ENT_OTHER_NBR_MARKER_TRX  <> PROP_OTHER_NBR_MARKER_TRX ) OR
( PROP_TABLE_NBR_SFK_TRX  <> MKT_TABLE_NBR_SFK_TRX  OR MKT_TABLE_NBR_SFK_TRX  <> ENT_TABLE_NBR_SFK_TRX  OR ENT_TABLE_NBR_SFK_TRX  <> PROP_TABLE_NBR_SFK_TRX ) OR
( PROP_SLOT_NBR_SFK_TRX  <> MKT_SLOT_NBR_SFK_TRX  OR MKT_SLOT_NBR_SFK_TRX  <> ENT_SLOT_NBR_SFK_TRX  OR ENT_SLOT_NBR_SFK_TRX  <> PROP_SLOT_NBR_SFK_TRX ) OR
( PROP_OTHER_NBR_SFK_TRX  <> MKT_OTHER_NBR_SFK_TRX  OR MKT_OTHER_NBR_SFK_TRX  <> ENT_OTHER_NBR_SFK_TRX  OR ENT_OTHER_NBR_SFK_TRX  <> PROP_OTHER_NBR_SFK_TRX ) OR
( PROP_TOTAL_NBR_SFKCCK_TRX  <> MKT_TOTAL_NBR_SFKCCK_TRX  OR MKT_TOTAL_NBR_SFKCCK_TRX  <> ENT_TOTAL_NBR_SFKCCK_TRX  OR ENT_TOTAL_NBR_SFKCCK_TRX  <> PROP_TOTAL_NBR_SFKCCK_TRX ) OR
( PROP_TOTAL_NBR_SFK_DEPOSIT_TRX  <> MKT_TOTAL_NBR_SFK_DEPOSIT_TRX  OR MKT_TOTAL_NBR_SFK_DEPOSIT_TRX  <> ENT_TOTAL_NBR_SFK_DEPOSIT_TRX  OR ENT_TOTAL_NBR_SFK_DEPOSIT_TRX  <> PROP_TOTAL_NBR_SFK_DEPOSIT_TRX );`});


	/* Create temp table to store discrepancy Guests from DAILY_ACTIVITY_SUMMARY */

	snowflake.execute( {sqlText: `
	CREATE OR REPLACE TABLE DAAS_TEMP.MARKERS_DAS_DISCREPANCY_GUEST_IDS AS
	SELECT
	GUEST_UNIQUE_ID,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN TABLE_MARKER_AMT ELSE 0 END) AS PROP_TABLE_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN TABLE_MARKER_AMT ELSE 0 END) AS MKT_TABLE_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN TABLE_MARKER_AMT ELSE 0 END) AS ENT_TABLE_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN SLOT_MARKER_AMT ELSE 0 END) AS PROP_SLOT_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN SLOT_MARKER_AMT ELSE 0 END) AS MKT_SLOT_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN SLOT_MARKER_AMT ELSE 0 END) AS ENT_SLOT_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN OTHER_MARKER_AMT ELSE 0 END) AS PROP_OTHER_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN OTHER_MARKER_AMT ELSE 0 END) AS MKT_OTHER_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN OTHER_MARKER_AMT ELSE 0 END) AS ENT_OTHER_MARKER_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN TABLE_SFK_DEPOSIT_AMT ELSE 0 END) AS PROP_TABLE_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN TABLE_SFK_DEPOSIT_AMT ELSE 0 END) AS MKT_TABLE_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN TABLE_SFK_DEPOSIT_AMT ELSE 0 END) AS ENT_TABLE_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN SLOT_SFK_DEPOSIT_AMT ELSE 0 END) AS PROP_SLOT_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN SLOT_SFK_DEPOSIT_AMT ELSE 0 END) AS MKT_SLOT_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN SLOT_SFK_DEPOSIT_AMT ELSE 0 END) AS ENT_SLOT_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN OTHER_SFK_DEPOSIT_AMT ELSE 0 END) AS PROP_OTHER_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN OTHER_SFK_DEPOSIT_AMT ELSE 0 END) AS MKT_OTHER_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN OTHER_SFK_DEPOSIT_AMT ELSE 0 END) AS ENT_OTHER_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN TOTAL_SFKCCK_AMT ELSE 0 END) AS PROP_TOTAL_SFKCCK_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN TOTAL_SFKCCK_AMT ELSE 0 END) AS MKT_TOTAL_SFKCCK_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN TOTAL_SFKCCK_AMT ELSE 0 END) AS ENT_TOTAL_SFKCCK_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN TOTAL_SFK_DEPOSIT_AMT ELSE 0 END) AS PROP_TOTAL_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN TOTAL_SFK_DEPOSIT_AMT ELSE 0 END) AS MKT_TOTAL_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN TOTAL_SFK_DEPOSIT_AMT ELSE 0 END) AS ENT_TOTAL_SFK_DEPOSIT_AMT,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN TABLE_NBR_MARKER_TRX ELSE 0 END) AS PROP_TABLE_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN TABLE_NBR_MARKER_TRX ELSE 0 END) AS MKT_TABLE_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN TABLE_NBR_MARKER_TRX ELSE 0 END) AS ENT_TABLE_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN SLOT_NBR_MARKER_TRX ELSE 0 END) AS PROP_SLOT_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN SLOT_NBR_MARKER_TRX ELSE 0 END) AS MKT_SLOT_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN SLOT_NBR_MARKER_TRX ELSE 0 END) AS ENT_SLOT_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN OTHER_NBR_MARKER_TRX ELSE 0 END) AS PROP_OTHER_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN OTHER_NBR_MARKER_TRX ELSE 0 END) AS MKT_OTHER_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN OTHER_NBR_MARKER_TRX ELSE 0 END) AS ENT_OTHER_NBR_MARKER_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN TABLE_NBR_SFK_TRX ELSE 0 END) AS PROP_TABLE_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN TABLE_NBR_SFK_TRX ELSE 0 END) AS MKT_TABLE_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN TABLE_NBR_SFK_TRX ELSE 0 END) AS ENT_TABLE_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN SLOT_NBR_SFK_TRX ELSE 0 END) AS PROP_SLOT_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN SLOT_NBR_SFK_TRX ELSE 0 END) AS MKT_SLOT_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN SLOT_NBR_SFK_TRX ELSE 0 END) AS ENT_SLOT_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN OTHER_NBR_SFK_TRX ELSE 0 END) AS PROP_OTHER_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN OTHER_NBR_SFK_TRX ELSE 0 END) AS MKT_OTHER_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN OTHER_NBR_SFK_TRX ELSE 0 END) AS ENT_OTHER_NBR_SFK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN TOTAL_NBR_SFKCCK_TRX ELSE 0 END) AS PROP_TOTAL_NBR_SFKCCK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN TOTAL_NBR_SFKCCK_TRX ELSE 0 END) AS MKT_TOTAL_NBR_SFKCCK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN TOTAL_NBR_SFKCCK_TRX ELSE 0 END) AS ENT_TOTAL_NBR_SFKCCK_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'PROPERTY' THEN TOTAL_NBR_SFK_DEPOSIT_TRX ELSE 0 END) AS PROP_TOTAL_NBR_SFK_DEPOSIT_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'MARKET' THEN TOTAL_NBR_SFK_DEPOSIT_TRX ELSE 0 END) AS MKT_TOTAL_NBR_SFK_DEPOSIT_TRX,
	SUM(CASE WHEN TRIP_TYPE = 'ENTERPRISE' THEN TOTAL_NBR_SFK_DEPOSIT_TRX ELSE 0 END) AS ENT_TOTAL_NBR_SFK_DEPOSIT_TRX
FROM
	DAAS_CORE_MARKETING_VW.DAILY_ACTIVITY_SUMMARY_VW
WHERE
	GUEST_UNIQUE_ID <> -1
GROUP BY 
	GUEST_UNIQUE_ID
HAVING 
( PROP_TABLE_MARKER_AMT  <> MKT_TABLE_MARKER_AMT  OR MKT_TABLE_MARKER_AMT  <> ENT_TABLE_MARKER_AMT  OR ENT_TABLE_MARKER_AMT  <> PROP_TABLE_MARKER_AMT ) OR
( PROP_SLOT_MARKER_AMT  <> MKT_SLOT_MARKER_AMT  OR MKT_SLOT_MARKER_AMT  <> ENT_SLOT_MARKER_AMT  OR ENT_SLOT_MARKER_AMT  <> PROP_SLOT_MARKER_AMT ) OR
( PROP_OTHER_MARKER_AMT  <> MKT_OTHER_MARKER_AMT  OR MKT_OTHER_MARKER_AMT  <> ENT_OTHER_MARKER_AMT  OR ENT_OTHER_MARKER_AMT  <> PROP_OTHER_MARKER_AMT ) OR
( PROP_TABLE_SFK_DEPOSIT_AMT  <> MKT_TABLE_SFK_DEPOSIT_AMT  OR MKT_TABLE_SFK_DEPOSIT_AMT  <> ENT_TABLE_SFK_DEPOSIT_AMT  OR ENT_TABLE_SFK_DEPOSIT_AMT  <> PROP_TABLE_SFK_DEPOSIT_AMT ) OR
( PROP_SLOT_SFK_DEPOSIT_AMT  <> MKT_SLOT_SFK_DEPOSIT_AMT  OR MKT_SLOT_SFK_DEPOSIT_AMT  <> ENT_SLOT_SFK_DEPOSIT_AMT  OR ENT_SLOT_SFK_DEPOSIT_AMT  <> PROP_SLOT_SFK_DEPOSIT_AMT ) OR
( PROP_OTHER_SFK_DEPOSIT_AMT  <> MKT_OTHER_SFK_DEPOSIT_AMT  OR MKT_OTHER_SFK_DEPOSIT_AMT  <> ENT_OTHER_SFK_DEPOSIT_AMT  OR ENT_OTHER_SFK_DEPOSIT_AMT  <> PROP_OTHER_SFK_DEPOSIT_AMT ) OR
( PROP_TOTAL_SFKCCK_AMT  <> MKT_TOTAL_SFKCCK_AMT  OR MKT_TOTAL_SFKCCK_AMT  <> ENT_TOTAL_SFKCCK_AMT  OR ENT_TOTAL_SFKCCK_AMT  <> PROP_TOTAL_SFKCCK_AMT ) OR
( PROP_TOTAL_SFK_DEPOSIT_AMT  <> MKT_TOTAL_SFK_DEPOSIT_AMT  OR MKT_TOTAL_SFK_DEPOSIT_AMT  <> ENT_TOTAL_SFK_DEPOSIT_AMT  OR ENT_TOTAL_SFK_DEPOSIT_AMT  <> PROP_TOTAL_SFK_DEPOSIT_AMT ) OR
( PROP_TABLE_NBR_MARKER_TRX  <> MKT_TABLE_NBR_MARKER_TRX  OR MKT_TABLE_NBR_MARKER_TRX  <> ENT_TABLE_NBR_MARKER_TRX  OR ENT_TABLE_NBR_MARKER_TRX  <> PROP_TABLE_NBR_MARKER_TRX ) OR
( PROP_SLOT_NBR_MARKER_TRX  <> MKT_SLOT_NBR_MARKER_TRX  OR MKT_SLOT_NBR_MARKER_TRX  <> ENT_SLOT_NBR_MARKER_TRX  OR ENT_SLOT_NBR_MARKER_TRX  <> PROP_SLOT_NBR_MARKER_TRX ) OR
( PROP_OTHER_NBR_MARKER_TRX  <> MKT_OTHER_NBR_MARKER_TRX  OR MKT_OTHER_NBR_MARKER_TRX  <> ENT_OTHER_NBR_MARKER_TRX  OR ENT_OTHER_NBR_MARKER_TRX  <> PROP_OTHER_NBR_MARKER_TRX ) OR
( PROP_TABLE_NBR_SFK_TRX  <> MKT_TABLE_NBR_SFK_TRX  OR MKT_TABLE_NBR_SFK_TRX  <> ENT_TABLE_NBR_SFK_TRX  OR ENT_TABLE_NBR_SFK_TRX  <> PROP_TABLE_NBR_SFK_TRX ) OR
( PROP_SLOT_NBR_SFK_TRX  <> MKT_SLOT_NBR_SFK_TRX  OR MKT_SLOT_NBR_SFK_TRX  <> ENT_SLOT_NBR_SFK_TRX  OR ENT_SLOT_NBR_SFK_TRX  <> PROP_SLOT_NBR_SFK_TRX ) OR
( PROP_OTHER_NBR_SFK_TRX  <> MKT_OTHER_NBR_SFK_TRX  OR MKT_OTHER_NBR_SFK_TRX  <> ENT_OTHER_NBR_SFK_TRX  OR ENT_OTHER_NBR_SFK_TRX  <> PROP_OTHER_NBR_SFK_TRX ) OR
( PROP_TOTAL_NBR_SFKCCK_TRX  <> MKT_TOTAL_NBR_SFKCCK_TRX  OR MKT_TOTAL_NBR_SFKCCK_TRX  <> ENT_TOTAL_NBR_SFKCCK_TRX  OR ENT_TOTAL_NBR_SFKCCK_TRX  <> PROP_TOTAL_NBR_SFKCCK_TRX ) OR
( PROP_TOTAL_NBR_SFK_DEPOSIT_TRX  <> MKT_TOTAL_NBR_SFK_DEPOSIT_TRX  OR MKT_TOTAL_NBR_SFK_DEPOSIT_TRX  <> ENT_TOTAL_NBR_SFK_DEPOSIT_TRX  OR ENT_TOTAL_NBR_SFK_DEPOSIT_TRX  <> PROP_TOTAL_NBR_SFK_DEPOSIT_TRX );` } );	
	
	
	/* Combine both temp tables and get distinct Guests */
	
	snowflake.execute( {sqlText: `
	CREATE OR REPLACE TABLE DAAS_TEMP.MARKERS_DISCREPANCY_GUEST_IDS AS
	SELECT GUEST_UNIQUE_ID FROM DAAS_TEMP.MARKERS_TS_DISCREPANCY_GUEST_IDS
	UNION
	SELECT GUEST_UNIQUE_ID FROM DAAS_TEMP.MARKERS_DAS_DISCREPANCY_GUEST_IDS
	;` } );	
	

	snowflake.execute( {sqlText: "COMMIT;" } );

	proc_output = "SUCCESS";
}	

catch (err) 
{ 
snowflake.execute( {sqlText: "ROLLBACK;" } );

proc_output += "\n Failed: Code: " + err.code + "\n  State: " + err.state;
proc_output += "\n  Message: " + err.message;
proc_output += "\nStack Trace:\n" + err.stackTraceTxt;
}
 
return proc_output;
$$;