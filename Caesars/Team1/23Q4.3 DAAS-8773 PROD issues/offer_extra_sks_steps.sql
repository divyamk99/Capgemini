----Check count of trip_master_is's getting recalculated 
SELECT
	 COUNT(A.TRIP_MASTER_ID)
FROM
		DAAS_CORE.TRIP_MASTER A
JOIN DAAS_CORE.TRIP_DETAIL B
ON
		A.TRIP_MASTER_ID = B.TRIP_MASTER_ID
JOIN (SELECT 
		TM.TRIP_MASTER_ID
	FROM
		DAAS_CORE.TRIP_MASTER TM
	WHERE 
		TM.TRIP_MASTER_ID IN (SELECT DISTINCT TRIP_MASTER_ID FROM DAAS_TEMP.OFFERS_EXTRA_SKS_CLEANUP_TRIPS)
	AND TM.DELETE_IND = 'N') C
ON
		A.TRIP_MASTER_ID = C.TRIP_MASTER_ID
WHERE
		 A.DELETE_IND = 'N'
	AND B.TRANSACTION_SUB_TYPE = 'OPENED';

---create temp table for records to be soft deleted	
CALL DAAS_ADHOC.ADHOC_SQL_EXECUTE('CREATE TABLE DAAS_TEMP.OFFERS_EXTRA_SKS_CLEANUP_TRIPS AS
SELECT DISTINCT TM.TRIP_MASTER_ID, TD.TRANSACTION_TABLE_SK ,
DENSE_RANK() OVER(ORDER BY TM.TRIP_MASTER_ID) AS RANK
FROM DAAS_CORE.TRIP_DETAIL TD
JOIN DAAS_CORE.TRIP_MASTER TM
ON TD.TRIP_MASTER_ID = TM.TRIP_MASTER_ID
WHERE TRANSACTION_TABLE_SK NOT IN (SELECT DISTINCT OFFER_LEDGER_FACT_SK FROM DAAS_CORE_MARKETING_VW.OFFER_LEDGER_FACT_TRIP_VW)
AND TD.TRANSACTION_TYPE = \'OFFER\'
AND TM.DELETE_IND = \'N\'
AND TD.DELETE_IND = \'N\'
AND TM.GUEST_UNIQUE_ID <> -1;');

---Soft delete those records from trip_detail tbl
CALL DAAS_ADHOC.ADHOC_SQL_EXECUTE('UPDATE DAAS_CORE.TRIP_DETAIL
SET DELETE_IND = \'Y\', TRANSACTION_SUB_TYPE = \'VOIDED\'
WHERE TRANSACTION_TABLE_SK IN (SELECT DISTINCT TRANSACTION_TABLE_SK FROM DAAS_TEMP.OFFERS_EXTRA_SKS_CLEANUP_TRIPS AND RANK)
AND TRANSACTION_TYPE = \'OFFER\';');

--Insert trip_master_id into recal queue for soft deleted records
CALL DAAS_ADHOC.ADHOC_SQL_EXECUTE('INSERT INTO DAAS_CORE.TRIP_RECALC_QUEUE
( 
	TRIP_MASTER_ID,
	STATUS,
	BATCH_ID,
	CREATED_DTTM,
	CREATED_BY,
	UPDATED_DTTM,
	UPDATED_BY 
)
SELECT 
	TM.TRIP_MASTER_ID,
	\'PENDING\' AS STATUS,
	20231207,
	CURRENT_TIMESTAMP AS CREATED_DTTM,
	CURRENT_USER AS CREATED_BY,
	CURRENT_TIMESTAMP AS UPDATED_DTTM,
	CURRENT_USER AS UPDATED_BY
FROM
	DAAS_CORE.TRIP_MASTER TM
WHERE 
	TM.TRIP_MASTER_ID IN (SELECT DISTINCT TRIP_MASTER_ID FROM DAAS_TEMP.OFFERS_EXTRA_SKS_CLEANUP_TRIPS WHERE RANK <=10000000)
AND TM.DELETE_IND = \'N\';');

SELECT MAX(RANK) FROM DAAS_TEMP.OFFERS_EXTRA_SKS_CLEANUP_TRIPS;


CALL DAAS_UAT.DAAS_SECURITY.CLONE_TABLE_PROC('DAAS_UAT', 'DAAS_UAT', 'DAAS_CORE', 'DAILY_ACTIVITY_SUMMARY', NULL ,NULL);
CALL DAAS_UAT.DAAS_SECURITY.CLONE_TABLE_PROC('DAAS_UAT', 'DAAS_UAT', 'DAAS_CORE', 'TRIP_SUMMARY', NULL ,NULL);
CALL DAAS_UAT.DAAS_SECURITY.CLONE_TABLE_PROC('DAAS_UAT', 'DAAS_UAT', 'DAAS_CORE', 'TRIP_DETAIL', NULL ,NULL);
CALL DAAS_UAT.DAAS_SECURITY.CLONE_TABLE_PROC('DAAS_UAT', 'DAAS_UAT', 'DAAS_CORE', 'TRIP_MASTER', NULL ,NULL);
CALL DAAS_UAT.DAAS_SECURITY.CLONE_TABLE_PROC('DAAS_UAT', 'DAAS_UAT', 'DAAS_CORE', 'TRIP_MERGE_PROCESSED', NULL ,NULL);
CALL DAAS_UAT.DAAS_SECURITY.CLONE_TABLE_PROC('DAAS_UAT', 'DAAS_UAT', 'DAAS_CORE', 'TRIP_MERGE_QUEUE', NULL ,NULL);
CALL DAAS_UAT.DAAS_SECURITY.CLONE_TABLE_PROC('DAAS_UAT', 'DAAS_UAT', 'DAAS_CORE', 'TRIP_RECALC_PROCESSED', NULL ,NULL);
CALL DAAS_UAT.DAAS_SECURITY.CLONE_TABLE_PROC('DAAS_UAT', 'DAAS_UAT', 'DAAS_CORE', 'TRIP_RECALC_QUEUE', NULL ,NULL);

CALL DAAS_ADHOC.ADHOC_SQL_EXECUTE('ALTER TASK DAAS_COMMON.RAW2CORE_PDB_OFFER_LEDGER_FACT_TASK SUSPEND;');


-- RANK <= 10000000 --10000000->35183047(1 hr)
-- RANK >=10000001 AND RANK <=23000000 --13000000->45992178(1 1/2 hr)
-- RANK >=23000001 AND RANK <=36000000 --13000000->(hr)
-- RANK >=36000001 -->11000000->(hr)