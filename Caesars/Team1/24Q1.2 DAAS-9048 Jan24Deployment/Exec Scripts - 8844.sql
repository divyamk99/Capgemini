-- Step 1: Suspend trip root task

ALTER TASK DAAS_COMMOM.TRIP_ROOT_TASK SUSPEND;

-- Step 2:- Code Check-in and Deploy the below procedure & Temp table:

	- trip_digital_play_proc
	- daily_activity_summary_digital_play_temp_dtf
	
common/daas_common/ddl/procedure/core/trip_digital_play_proc.sql,procedure
temp/daas_temp/ddl/table/daily_activity_summary_digital_play_temp_dtf.sql,table


-- Step 3: Identify discrepancies

WITH DIGITAL_FACT AS
	(
	SELECT 
		DGXBL.GUEST_UNIQUE_ID
		,TO_DATE(DTF.REPORT_DT) AS GUEST_ACTIVITY_DATE
		,SUM(DTF.CASINO_GGR) CASINO_GGR
		,SUM(DTF.SPORTS_GGR) SPORTS_GGR
		,SUM(DTF.POKER_GGR) POKER_GGR
		,SUM(DTF.SPORTS_THEO) SPORTS_THEO
		,SUM(DTF.CASINO_NET_THEO) CASINO_NET_THEO
		,SUM(DTF.CASINO_WAGER) CASINO_WAGER
		,SUM(DTF.SPORTS_WAGER) SPORTS_WAGER
		,SUM(DTF.CASINO_BONUS) CASINO_BONUS
		,SUM(DTF.SPORTS_BONUS) SPORTS_BONUS
		,MAX(DTF.UPDATED_DTTM) UPDATED_DTTM
		,MAX(DTF.BATCH_ID) BATCH_ID
	FROM 
		DAAS_CORE.DIGITAL_TRANSACTIONS_FACT DTF
	LEFT JOIN 
	(SELECT DISTINCT BRAND_NAME,STATE_CD FROM DAAS_STG_IGAMING.BRAND_VALIDATION) BVAL 
	ON 
	DTF.BRAND = REPLACE(BVAL.BRAND_NAME,'''')
	LEFT JOIN 
		DAAS_CORE.DIGITAL_GUEST_XREF_BRIDGE_LKP DGXBL 
	ON 
		DTF.CID = DGXBL.IGAMING_XREF 
	AND
		DGXBL.IGAMING_XREF_BRAND = CASE WHEN DTF.SOURCE_SYSTEM_NM = 'William Hill' THEN DTF.BRAND ELSE SUBSTR(BVAL.BRAND_NAME,1,2)||BVAL.STATE_CD END
	GROUP BY 
		DGXBL.GUEST_UNIQUE_ID
		,DATE(DTF.REPORT_DT) 
	),
	DAILY_ACTIVITY AS
	(
	SELECT 
	GUEST_UNIQUE_ID
	,GUEST_ACTIVITY_DATE
	,CASINO_GGR
	,SPORTS_GGR
	,POKER_GGR
	,SPORTS_THEO
	,CASINO_NET_THEO
	,CASINO_WAGER
	,SPORTS_WAGER
	,CASINO_BONUS
	,SPORTS_BONUS
	,UPDATED_DTTM
	FROM (SELECT
		DAILY_ACTIVITY_SUMMARY.GUEST_UNIQUE_ID AS GUEST_UNIQUE_ID,
		DAILY_ACTIVITY_SUMMARY.TRIP_TYPE AS TRIP_TYPE,
		DAILY_ACTIVITY_SUMMARY.GUEST_ACTIVITY_DATE AS GUEST_ACTIVITY_DATE,
		DAILY_ACTIVITY_SUMMARY.CASINO_GGR AS CASINO_GGR,
		DAILY_ACTIVITY_SUMMARY.SPORTS_GGR AS SPORTS_GGR,
		DAILY_ACTIVITY_SUMMARY.POKER_GGR AS POKER_GGR,
		DAILY_ACTIVITY_SUMMARY.SPORTS_THEO AS SPORTS_THEO,
		DAILY_ACTIVITY_SUMMARY.CASINO_NET_THEO AS CASINO_NET_THEO,
		DAILY_ACTIVITY_SUMMARY.CASINO_WAGER AS CASINO_WAGER,
		DAILY_ACTIVITY_SUMMARY.SPORTS_WAGER AS SPORTS_WAGER,
		DAILY_ACTIVITY_SUMMARY.CASINO_BONUS AS CASINO_BONUS,
		DAILY_ACTIVITY_SUMMARY.SPORTS_BONUS AS SPORTS_BONUS,
		DAILY_ACTIVITY_SUMMARY.DIGITAL_FLG AS DIGITAL_FLG,
		DAILY_ACTIVITY_SUMMARY.UPDATED_DTTM AS UPDATED_DTTM
	FROM
		DAAS_CORE.DAILY_ACTIVITY_SUMMARY DAILY_ACTIVITY_SUMMARY
	JOIN 
		DAAS_CORE.TRIP_MASTER TRIP_MASTER 
	ON
		DAILY_ACTIVITY_SUMMARY.TRIP_MASTER_ID = TRIP_MASTER.TRIP_MASTER_ID
	WHERE
		TRIP_MASTER.DELETE_IND = 'N' 
	AND DAILY_ACTIVITY_SUMMARY.TRIP_MASTER_ID <> -1 
	AND DAILY_ACTIVITY_SUMMARY.DELETE_IND = 'N'
	AND DAILY_ACTIVITY_SUMMARY.GUEST_ACTIVITY_DATE <= CURRENT_DATE
	UNION ALL
	SELECT
		DAILY_ACTIVITY_SUMMARY.GUEST_UNIQUE_ID AS GUEST_UNIQUE_ID,
		DAILY_ACTIVITY_SUMMARY.TRIP_TYPE AS TRIP_TYPE,
		DAILY_ACTIVITY_SUMMARY.GUEST_ACTIVITY_DATE AS GUEST_ACTIVITY_DATE,
		DAILY_ACTIVITY_SUMMARY.CASINO_GGR AS CASINO_GGR,
		DAILY_ACTIVITY_SUMMARY.SPORTS_GGR AS SPORTS_GGR,
		DAILY_ACTIVITY_SUMMARY.POKER_GGR AS POKER_GGR,
		DAILY_ACTIVITY_SUMMARY.SPORTS_THEO AS SPORTS_THEO,
		DAILY_ACTIVITY_SUMMARY.CASINO_NET_THEO AS CASINO_NET_THEO,
		DAILY_ACTIVITY_SUMMARY.CASINO_WAGER AS CASINO_WAGER,
		DAILY_ACTIVITY_SUMMARY.SPORTS_WAGER AS SPORTS_WAGER,
		DAILY_ACTIVITY_SUMMARY.CASINO_BONUS AS CASINO_BONUS,
		DAILY_ACTIVITY_SUMMARY.SPORTS_BONUS AS SPORTS_BONUS,
		DAILY_ACTIVITY_SUMMARY.DIGITAL_FLG AS DIGITAL_FLG,
		DAILY_ACTIVITY_SUMMARY.UPDATED_DTTM AS UPDATED_DTTM
	FROM
		DAAS_CORE.DAILY_ACTIVITY_SUMMARY DAILY_ACTIVITY_SUMMARY
	WHERE
		DAILY_ACTIVITY_SUMMARY.TRIP_MASTER_ID = -1 
	AND DAILY_ACTIVITY_SUMMARY.DELETE_IND = 'N'
	AND DAILY_ACTIVITY_SUMMARY.GUEST_ACTIVITY_DATE <= CURRENT_DATE)
	WHERE DIGITAL_FLG = 'Y'  AND TRIP_TYPE = 'ENTERPRISE'
	)
	SELECT 
	DIGITAL_FACT.GUEST_UNIQUE_ID AS GUEST_UNIQUE_ID
	,DIGITAL_FACT.GUEST_ACTIVITY_DATE AS GUEST_ACTIVITY_DATE
	,DIGITAL_FACT.UPDATED_DTTM DIGITAL_UPDATE_DTTM
	,DAILY_ACTIVITY.UPDATED_DTTM DAILY_ACTIVITY_DTTM
	,(DIGITAL_FACT.CASINO_GGR - DAILY_ACTIVITY.CASINO_GGR) AS CASINO_GGR_DIFF 
	,(DIGITAL_FACT.SPORTS_GGR - DAILY_ACTIVITY.SPORTS_GGR) AS SPORTS_GGR_DIFF
	,(DIGITAL_FACT.POKER_GGR - DAILY_ACTIVITY.POKER_GGR) AS POKER_GGR_DIFF
	,(DIGITAL_FACT.SPORTS_THEO - DAILY_ACTIVITY.SPORTS_THEO) AS SPORTS_THEO_DIFF
	,(DIGITAL_FACT.CASINO_NET_THEO - DAILY_ACTIVITY.CASINO_NET_THEO) AS CASINO_NET_THEO_DIFF 
	,(DIGITAL_FACT.CASINO_WAGER - DAILY_ACTIVITY.CASINO_WAGER) AS CASINO_WAGER_DIFF 
	,(DIGITAL_FACT.SPORTS_WAGER - DAILY_ACTIVITY.SPORTS_WAGER) AS SPORTS_WAGER_DIFF
	,(DIGITAL_FACT.CASINO_BONUS - DAILY_ACTIVITY.CASINO_BONUS) AS CASINO_BONUS_DIFF
	,(DIGITAL_FACT.SPORTS_BONUS - DAILY_ACTIVITY.SPORTS_BONUS) AS SPORTS_BONUS_DIFF
	,DIGITAL_FACT.BATCH_ID
	FROM DIGITAL_FACT
	JOIN DAILY_ACTIVITY
	ON DAILY_ACTIVITY.GUEST_UNIQUE_ID = DIGITAL_FACT.GUEST_UNIQUE_ID
	AND DAILY_ACTIVITY.GUEST_ACTIVITY_DATE = DIGITAL_FACT.GUEST_ACTIVITY_DATE
	WHERE 
	(CASINO_GGR_DIFF <> 0
	OR SPORTS_GGR_DIFF <> 0
	OR POKER_GGR_DIFF <> 0
	OR SPORTS_THEO_DIFF <> 0
	OR CASINO_NET_THEO_DIFF <> 0
	OR CASINO_WAGER_DIFF <> 0
	OR SPORTS_WAGER_DIFF <> 0
	OR CASINO_BONUS_DIFF <> 0
	OR SPORTS_BONUS_DIFF <> 0
	) AND DIGITAL_FACT.GUEST_UNIQUE_ID <> -1 
	AND (CASINO_GGR_DIFF+SPORTS_GGR_DIFF+POKER_GGR_DIFF+SPORTS_THEO_DIFF+CASINO_NET_THEO_DIFF+CASINO_WAGER_DIFF+SPORTS_WAGER_DIFF+
      CASINO_BONUS_DIFF+SPORTS_BONUS_DIFF) <> 0
	AND DAILY_ACTIVITY.UPDATED_DTTM >= DIGITAL_FACT.UPDATED_DTTM;


-- Step 4: Capture the discrepancies into a temp table & replay using adhoc proc

CALL DAAS_ADHOC.TRIP_DIGITAL_REPLAY_ADHOC_REQUEST_PROC();

-- Step 5: Execute trip summary on-demand task

EXECUTE TASK DAAS_COMMON.TRIP_SUMMARY_WRAPPER_ONDEMAND_TASK;

-- Step 6: Validate if any discrepancies

WITH DIGITAL_FACT AS
	(
	SELECT 
		DGXBL.GUEST_UNIQUE_ID
		,TO_DATE(DTF.REPORT_DT) AS GUEST_ACTIVITY_DATE
		,SUM(DTF.CASINO_GGR) CASINO_GGR
		,SUM(DTF.SPORTS_GGR) SPORTS_GGR
		,SUM(DTF.POKER_GGR) POKER_GGR
		,SUM(DTF.SPORTS_THEO) SPORTS_THEO
		,SUM(DTF.CASINO_NET_THEO) CASINO_NET_THEO
		,SUM(DTF.CASINO_WAGER) CASINO_WAGER
		,SUM(DTF.SPORTS_WAGER) SPORTS_WAGER
		,SUM(DTF.CASINO_BONUS) CASINO_BONUS
		,SUM(DTF.SPORTS_BONUS) SPORTS_BONUS
		,MAX(DTF.UPDATED_DTTM) UPDATED_DTTM
		,MAX(DTF.BATCH_ID) BATCH_ID
	FROM 
		DAAS_CORE.DIGITAL_TRANSACTIONS_FACT DTF
	LEFT JOIN 
	(SELECT DISTINCT BRAND_NAME,STATE_CD FROM DAAS_STG_IGAMING.BRAND_VALIDATION) BVAL 
	ON 
	DTF.BRAND = REPLACE(BVAL.BRAND_NAME,'''')
	LEFT JOIN 
		DAAS_CORE.DIGITAL_GUEST_XREF_BRIDGE_LKP DGXBL 
	ON 
		DTF.CID = DGXBL.IGAMING_XREF 
	AND
		DGXBL.IGAMING_XREF_BRAND = CASE WHEN DTF.SOURCE_SYSTEM_NM = 'William Hill' THEN DTF.BRAND ELSE SUBSTR(BVAL.BRAND_NAME,1,2)||BVAL.STATE_CD END
	GROUP BY 
		DGXBL.GUEST_UNIQUE_ID
		,DATE(DTF.REPORT_DT) 
	),
	DAILY_ACTIVITY AS
	(
	SELECT 
	GUEST_UNIQUE_ID
	,GUEST_ACTIVITY_DATE
	,CASINO_GGR
	,SPORTS_GGR
	,POKER_GGR
	,SPORTS_THEO
	,CASINO_NET_THEO
	,CASINO_WAGER
	,SPORTS_WAGER
	,CASINO_BONUS
	,SPORTS_BONUS
	,UPDATED_DTTM
	FROM (SELECT
		DAILY_ACTIVITY_SUMMARY.GUEST_UNIQUE_ID AS GUEST_UNIQUE_ID,
		DAILY_ACTIVITY_SUMMARY.TRIP_TYPE AS TRIP_TYPE,
		DAILY_ACTIVITY_SUMMARY.GUEST_ACTIVITY_DATE AS GUEST_ACTIVITY_DATE,
		DAILY_ACTIVITY_SUMMARY.CASINO_GGR AS CASINO_GGR,
		DAILY_ACTIVITY_SUMMARY.SPORTS_GGR AS SPORTS_GGR,
		DAILY_ACTIVITY_SUMMARY.POKER_GGR AS POKER_GGR,
		DAILY_ACTIVITY_SUMMARY.SPORTS_THEO AS SPORTS_THEO,
		DAILY_ACTIVITY_SUMMARY.CASINO_NET_THEO AS CASINO_NET_THEO,
		DAILY_ACTIVITY_SUMMARY.CASINO_WAGER AS CASINO_WAGER,
		DAILY_ACTIVITY_SUMMARY.SPORTS_WAGER AS SPORTS_WAGER,
		DAILY_ACTIVITY_SUMMARY.CASINO_BONUS AS CASINO_BONUS,
		DAILY_ACTIVITY_SUMMARY.SPORTS_BONUS AS SPORTS_BONUS,
		DAILY_ACTIVITY_SUMMARY.DIGITAL_FLG AS DIGITAL_FLG,
		DAILY_ACTIVITY_SUMMARY.UPDATED_DTTM AS UPDATED_DTTM
	FROM
		DAAS_CORE.DAILY_ACTIVITY_SUMMARY DAILY_ACTIVITY_SUMMARY
	JOIN 
		DAAS_CORE.TRIP_MASTER TRIP_MASTER 
	ON
		DAILY_ACTIVITY_SUMMARY.TRIP_MASTER_ID = TRIP_MASTER.TRIP_MASTER_ID
	WHERE
		TRIP_MASTER.DELETE_IND = 'N' 
	AND DAILY_ACTIVITY_SUMMARY.TRIP_MASTER_ID <> -1 
	AND DAILY_ACTIVITY_SUMMARY.DELETE_IND = 'N'
	AND DAILY_ACTIVITY_SUMMARY.GUEST_ACTIVITY_DATE <= CURRENT_DATE
	UNION ALL
	SELECT
		DAILY_ACTIVITY_SUMMARY.GUEST_UNIQUE_ID AS GUEST_UNIQUE_ID,
		DAILY_ACTIVITY_SUMMARY.TRIP_TYPE AS TRIP_TYPE,
		DAILY_ACTIVITY_SUMMARY.GUEST_ACTIVITY_DATE AS GUEST_ACTIVITY_DATE,
		DAILY_ACTIVITY_SUMMARY.CASINO_GGR AS CASINO_GGR,
		DAILY_ACTIVITY_SUMMARY.SPORTS_GGR AS SPORTS_GGR,
		DAILY_ACTIVITY_SUMMARY.POKER_GGR AS POKER_GGR,
		DAILY_ACTIVITY_SUMMARY.SPORTS_THEO AS SPORTS_THEO,
		DAILY_ACTIVITY_SUMMARY.CASINO_NET_THEO AS CASINO_NET_THEO,
		DAILY_ACTIVITY_SUMMARY.CASINO_WAGER AS CASINO_WAGER,
		DAILY_ACTIVITY_SUMMARY.SPORTS_WAGER AS SPORTS_WAGER,
		DAILY_ACTIVITY_SUMMARY.CASINO_BONUS AS CASINO_BONUS,
		DAILY_ACTIVITY_SUMMARY.SPORTS_BONUS AS SPORTS_BONUS,
		DAILY_ACTIVITY_SUMMARY.DIGITAL_FLG AS DIGITAL_FLG,
		DAILY_ACTIVITY_SUMMARY.UPDATED_DTTM AS UPDATED_DTTM
	FROM
		DAAS_CORE.DAILY_ACTIVITY_SUMMARY DAILY_ACTIVITY_SUMMARY
	WHERE
		DAILY_ACTIVITY_SUMMARY.TRIP_MASTER_ID = -1 
	AND DAILY_ACTIVITY_SUMMARY.DELETE_IND = 'N'
	AND DAILY_ACTIVITY_SUMMARY.GUEST_ACTIVITY_DATE <= CURRENT_DATE)
	WHERE DIGITAL_FLG = 'Y'  AND TRIP_TYPE = 'ENTERPRISE'
	)
	SELECT 
	DIGITAL_FACT.GUEST_UNIQUE_ID AS GUEST_UNIQUE_ID
	,DIGITAL_FACT.GUEST_ACTIVITY_DATE AS GUEST_ACTIVITY_DATE
	,DIGITAL_FACT.UPDATED_DTTM DIGITAL_UPDATE_DTTM
	,DAILY_ACTIVITY.UPDATED_DTTM DAILY_ACTIVITY_DTTM
	,(DIGITAL_FACT.CASINO_GGR - DAILY_ACTIVITY.CASINO_GGR) AS CASINO_GGR_DIFF 
	,(DIGITAL_FACT.SPORTS_GGR - DAILY_ACTIVITY.SPORTS_GGR) AS SPORTS_GGR_DIFF
	,(DIGITAL_FACT.POKER_GGR - DAILY_ACTIVITY.POKER_GGR) AS POKER_GGR_DIFF
	,(DIGITAL_FACT.SPORTS_THEO - DAILY_ACTIVITY.SPORTS_THEO) AS SPORTS_THEO_DIFF
	,(DIGITAL_FACT.CASINO_NET_THEO - DAILY_ACTIVITY.CASINO_NET_THEO) AS CASINO_NET_THEO_DIFF 
	,(DIGITAL_FACT.CASINO_WAGER - DAILY_ACTIVITY.CASINO_WAGER) AS CASINO_WAGER_DIFF 
	,(DIGITAL_FACT.SPORTS_WAGER - DAILY_ACTIVITY.SPORTS_WAGER) AS SPORTS_WAGER_DIFF
	,(DIGITAL_FACT.CASINO_BONUS - DAILY_ACTIVITY.CASINO_BONUS) AS CASINO_BONUS_DIFF
	,(DIGITAL_FACT.SPORTS_BONUS - DAILY_ACTIVITY.SPORTS_BONUS) AS SPORTS_BONUS_DIFF
	,DIGITAL_FACT.BATCH_ID
	FROM DIGITAL_FACT
	JOIN DAILY_ACTIVITY
	ON DAILY_ACTIVITY.GUEST_UNIQUE_ID = DIGITAL_FACT.GUEST_UNIQUE_ID
	AND DAILY_ACTIVITY.GUEST_ACTIVITY_DATE = DIGITAL_FACT.GUEST_ACTIVITY_DATE
	WHERE 
	(CASINO_GGR_DIFF <> 0
	OR SPORTS_GGR_DIFF <> 0
	OR POKER_GGR_DIFF <> 0
	OR SPORTS_THEO_DIFF <> 0
	OR CASINO_NET_THEO_DIFF <> 0
	OR CASINO_WAGER_DIFF <> 0
	OR SPORTS_WAGER_DIFF <> 0
	OR CASINO_BONUS_DIFF <> 0
	OR SPORTS_BONUS_DIFF <> 0
	) AND DIGITAL_FACT.GUEST_UNIQUE_ID <> -1 
	AND (CASINO_GGR_DIFF+SPORTS_GGR_DIFF+POKER_GGR_DIFF+SPORTS_THEO_DIFF+CASINO_NET_THEO_DIFF+CASINO_WAGER_DIFF+SPORTS_WAGER_DIFF+
      CASINO_BONUS_DIFF+SPORTS_BONUS_DIFF) <> 0
	AND DAILY_ACTIVITY.UPDATED_DTTM >= DIGITAL_FACT.UPDATED_DTTM;

--Step 7: Resume trip root task

ALTER TASK DAAS_COMMON.TRIP_ROOT_TASK RESUME;