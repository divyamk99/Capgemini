/******************************** Records which needs to be soft deleted prior to 2017 ***************************/

-- Suspend trip root task
ALTER TASK DAAS_COMMON.TRIP_ROOT_TASK SUSPEND;

-- Take backup of Trip tables [Thru Standardized Proc - BACKUP_TABLE_PROC]

CALL DAAS_UAT.DAAS_SECURITY.CLONE_TABLE_PROC('DAAS_UAT', 'DAAS_UAT', 'DAAS_CORE', 'DAILY_ACTIVITY_SUMMARY', NULL ,NULL);
CALL DAAS_UAT.DAAS_SECURITY.CLONE_TABLE_PROC('DAAS_UAT', 'DAAS_UAT', 'DAAS_CORE', 'TRIP_SUMMARY', NULL ,NULL);
CALL DAAS_UAT.DAAS_SECURITY.CLONE_TABLE_PROC('DAAS_UAT', 'DAAS_UAT', 'DAAS_CORE', 'TRIP_DETAIL', NULL ,NULL);
CALL DAAS_UAT.DAAS_SECURITY.CLONE_TABLE_PROC('DAAS_UAT', 'DAAS_UAT', 'DAAS_CORE', 'TRIP_MASTER', NULL ,NULL);
CALL DAAS_UAT.DAAS_SECURITY.CLONE_TABLE_PROC('DAAS_UAT', 'DAAS_UAT', 'DAAS_CORE', 'TRIP_MERGE_PROCESSED', NULL ,NULL);
CALL DAAS_UAT.DAAS_SECURITY.CLONE_TABLE_PROC('DAAS_UAT', 'DAAS_UAT', 'DAAS_CORE', 'TRIP_MERGE_QUEUE', NULL ,NULL);
CALL DAAS_UAT.DAAS_SECURITY.CLONE_TABLE_PROC('DAAS_UAT', 'DAAS_UAT', 'DAAS_CORE', 'TRIP_RECALC_PROCESSED', NULL ,NULL);
CALL DAAS_UAT.DAAS_SECURITY.CLONE_TABLE_PROC('DAAS_UAT', 'DAAS_UAT', 'DAAS_CORE', 'TRIP_RECALC_QUEUE', NULL ,NULL);

--- Step 1 : Check the table before the cleanup process using below queries

-- a) Check what all domains has business_start_dt = 2017 and business_end_dt = 2018
-- Needs to be handled with a different approach 

SELECT DISTINCT TRANSACTION_TYPE 
FROM DAAS_CORE.TRIP_DETAIL TD 
JOIN DAAS_CORE.TRIP_MASTER TM 
ON TM.TRIP_MASTER_ID = TD.TRIP_MASTER_ID 
WHERE TM.DELETE_IND = 'N'
AND TD.DELETE_IND = 'N' 
AND YEAR(BUSINESS_START_DT) <= 2017 
AND YEAR(BUSINESS_END_DT) = 2018;--HOTEL


-- b) Check what all domains has business_start_dt = 2017 and business_end_dt = 2017


SELECT DISTINCT TRANSACTION_TYPE 
FROM DAAS_CORE.TRIP_DETAIL TD 
JOIN DAAS_CORE.TRIP_MASTER TM 
ON TM.TRIP_MASTER_ID = TD.TRIP_MASTER_ID 
WHERE TM.DELETE_IND = 'N'
AND TD.DELETE_IND = 'N' 
AND YEAR(BUSINESS_START_DT) <= 2017 
AND YEAR(BUSINESS_END_DT) <= 2017;--ALL 7 DOMAINS


-- c) Check the number of TRANSACTION Sks  and TRIP_MASTER_ID which needs to be soft deleted and recalculated respectively

SELECT 
COUNT(DISTINCT TD.TRANSACTION_TABLE_SK) TRANSACTION_TABLE_SK_COUNT,--242068
COUNT(DISTINCT TM.TRIP_MASTER_ID) TRIP_MASTER_ID_COUNT --345787 
FROM DAAS_CORE.TRIP_DETAIL TD 
JOIN DAAS_CORE.TRIP_MASTER TM 
ON TM.TRIP_MASTER_ID = TD.TRIP_MASTER_ID 
WHERE TM.DELETE_IND = 'N'
AND TD.DELETE_IND = 'N' 
AND YEAR(BUSINESS_START_DT) <= 2017 
AND YEAR(BUSINESS_END_DT) <= 2017;



--- Step 2) Create temp table to hold the transactions to be Soft Deleted and TRIP_MASTER_IDs to be Recalculated 

CREATE TABLE DAAS_TEMP.TRIPS_2017_PRIOR_TRANSACTIONS AS 
SELECT 
   TD.TRANSACTION_TABLE_SK
   ,TD.TRANSACTION_TYPE 
   ,TM.TRIP_MASTER_ID
FROM DAAS_CORE.TRIP_DETAIL TD 
JOIN DAAS_CORE.TRIP_MASTER TM 
ON TM.TRIP_MASTER_ID = TD.TRIP_MASTER_ID 
WHERE TM.DELETE_IND = 'N'
AND TD.DELETE_IND = 'N' 
AND YEAR(BUSINESS_START_DT) <= 2017 
AND YEAR(BUSINESS_END_DT) <= 2017;


--- Step 3) Soft Delete and Recalculate 

UPDATE DAAS_CORE.TRIP_DETAIL TD 
SET 
   TD.DELETE_IND = 'Y',
   TD.TRANSACTION_SUB_TYPE = 'VOIDED'
FROM 
(
SELECT DISTINCT TRANSACTION_TABLE_SK,
TRANSACTION_TYPE 
FROM DAAS_TEMP.TRIPS_2017_PRIOR_TRANSACTIONS) SRC 
WHERE SRC.TRANSACTION_TABLE_SK = TD.TRANSACTION_TABLE_SK
AND SRC.TRANSACTION_TYPE = TD.TRANSACTION_TYPE;


INSERT INTO DAAS_CORE.TRIP_RECALC_QUEUE
( 
	TRIP_MASTER_ID,
	STATUS,
	BATCH_ID,
	CREATED_DTTM,
	CREATED_BY,
	UPDATED_DTTM,
	UPDATED_BY 
)
SELECT 
	TM.TRIP_MASTER_ID,
	'PENDING' AS STATUS,
	TO_VARCHAR(CURRENT_DATE,'YYYYMMDD'),
	CURRENT_TIMESTAMP AS CREATED_DTTM,
	CURRENT_USER AS CREATED_BY,
	CURRENT_TIMESTAMP AS UPDATED_DTTM,
	CURRENT_USER AS UPDATED_BY
FROM
	DAAS_CORE.TRIP_MASTER TM
WHERE 
	TM.TRIP_MASTER_ID IN 
	(SELECT DISTINCT TRIP_MASTER_ID FROM DAAS_TEMP.TRIPS_2017_PRIOR_TRANSACTIONS)
AND TM.DELETE_IND = 'N';

-- Step 4) Execute on-demand task

EXECUTE TASK DAAS_COMMON.TRIP_RECALCULATION_ONDEMAND_TASK;
EXECUTE TASK DAAS_COMMON.TRIP_MERGE_CHECK_ONDEMAND_TASK;
EXECUTE TASK DAAS_COMMON.TRIP_MERGE_ONDEMAND_TASK;
EXECUTE TASK DAAS_COMMON.TRIP_CUSTOMER_MERGE_CHECK_GUEST_GUESTXREF_ONDEMAND_TASK;
EXECUTE TASK DAAS_COMMON.TRIP_CUSTOMER_MERGE_CHECK_TRIP_MASTER_ONDEMAND_TASK;
EXECUTE TASK DAAS_COMMON.TRIP_CUSTOMER_MERGE_ONDEMAND_TASK;
EXECUTE TASK DAAS_COMMON.TRIP_SUMMARY_WRAPPER_ONDEMAND_TASK;

--- Step 5) Validate the records 

-- Should return 0

SELECT 
COUNT(DISTINCT TD.TRANSACTION_TABLE_SK) TRANSACTION_TABLE_SK_COUNT  
FROM DAAS_CORE.TRIP_DETAIL TD 
JOIN DAAS_CORE.TRIP_MASTER TM 
ON TM.TRIP_MASTER_ID = TD.TRIP_MASTER_ID 
WHERE TM.DELETE_IND = 'N'
AND TD.DELETE_IND = 'N' 
AND YEAR(BUSINESS_START_DT) <= 2017 
AND YEAR(BUSINESS_END_DT) <= 2017;

-- Should return 0

SELECT 
COUNT(TM.TRIP_MASTER_ID)
FROM DAAS_CORE.TRIP_MASTER TM
WHERE TM.TRIP_MASTER_ID IN (SELECT TRIP_MASTER_ID FROM DAAS_TEMP.TRIPS_2017_PRIOR_TRANSACTIONS) 
AND TM.DELETE_IND = 'N'
AND YEAR(TRIP_START_DT)<= 2017
AND YEAR(TRIP_END_DT)<=2017;


--Resume trip root task(Only for PROD)
ALTER TASK DAAS_COMMON.TRIP_ROOT_TASK RESUME;

-- Step 5) For the domains/transactions which has business_start_dt = 2017 and business_end_dt = 2018

-- Problem Statement: As in HOTEL the transaction start and end date depends on the arrival and departure date, which forms a single transaction.
-- It is not possible to alter the arrival date which is coming from source.



-- Approach 1) Soft Delete the records by following above steps 

  --> All the transactions which are started in 2017 and ending with 2018 will be soft deleted 
  
  --> Domain Pipelines needs to be added with a condition to not process the records having arrival_date(HOTEL)/transaction_dt <= 2017
  
  --> Guests related to the transactions, which are soft deleted needs to be replayed
  
  
-- Approach 2) 

  --> Keep the transactions which are started in 2017 and ending with 2018
  
  --> Replay the guest_unique_ids related to these transactions to resolve the existing descrepencies.
  
  --> Domain Pipelines needs to be added with a condition to not process the records having arrival_date(HOTEL)/transaction_dt <= 2017



--For offer 9 records
CALL DAAS_COMMON.QUERIES_EXECUTER('UPDATE DAAS_CORE.TRIP_DETAIL TD
SET TD.REPLAY_COUNTER=COALESCE(TD.REPLAY_COUNTER,0)+1
FROM DAAS_CORE.TRIP_MASTER TM 
WHERE TM.TRIP_MASTER_ID = TD.TRIP_MASTER_ID
AND TD.DELETE_IND=\'N\'
AND TM.DELETE_IND=\'N\'
AND GUEST_UNIQUE_ID IN(19605985756,10101451802,12301006795,12301019103,13600406456,
                       15300058440,13102360828,13606584394,11401734164);');
                       
EXECUTE TASK DAAS_COMMON.TRIP_SUMMARY_WRAPPER_ONDEMAND_TASK;   