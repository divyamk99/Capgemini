CREATE OR REPLACE PROCEDURE DAAS_COMMON.TRIP_DIGITAL_PLAY_PROC(BATCH_ID FLOAT,SHARD_NAME VARCHAR,WAREHOUSE_NAME VARCHAR, CUSTOM_PARAM1 VARCHAR, CUSTOM_PARAM2 VARCHAR) 
RETURNS VARCHAR
LANGUAGE JAVASCRIPT 
EXECUTE AS CALLER AS 
$$ 
/*
#####################################################################################
Author: Guruprasad Hegde
Purpose: Load Trip daily Summary Data for digital play
Input Parameters: 
Output Value: Aggregate daily Summary for digital play trips
Create Date: 05/05/2023
Version: 1.0


Version:2.0 - 11/20/2023 Adam Tobin - Changing from CTEs to temp tables to reduce memory spillage.
#####################################################################################
*/

proc_output = "";
proc_step = "";
snowflake.execute( {sqlText: "USE WAREHOUSE " + WAREHOUSE_NAME} );
tag = BATCH_ID + "_TRIP_DIGITAL_PLAY_PROC";
snowflake.execute( {sqlText: "ALTER SESSION SET QUERY_TAG = '" + tag + "'" });

transaction_process = CUSTOM_PARAM1;



/************************************* 
             Digital merge 
***************************************/

/*Create temp table using digital_Transactions_fact_stream and digital_Transactions_fact */
my_sql_command_1_a = `

CREATE OR REPLACE TABLE DAAS_TEMP.DAILY_ACTIVITY_SUMMARY_DIGITAL_PLAY_TEMP_DTF_STREAM as 
SELECT DISTINCT
   GUEST_UNIQUE_ID,
   DATE(REPORT_DT) AS GUEST_ACTIVITY_DATE
FROM 
   DAAS_CORE.DIGITAL_TRANSACTIONS_FACT_TRIP_STREAM DTF_STREAM
LEFT JOIN 
   (SELECT DISTINCT BRAND_NAME,STATE_CD FROM DAAS_STG_IGAMING.BRAND_VALIDATION) BVAL 
ON 
    DTF_STREAM.BRAND = REPLACE(BVAL.BRAND_NAME,'''')
LEFT JOIN 
	DAAS_CORE.DIGITAL_GUEST_XREF_BRIDGE_LKP DGXBL 
ON 
	DTF_STREAM.CID = DGXBL.IGAMING_XREF 
AND
    DGXBL.IGAMING_XREF_BRAND = CASE WHEN DTF_STREAM.SOURCE_SYSTEM_NM = 'William Hill' THEN DTF_STREAM.BRAND ELSE SUBSTR(BVAL.BRAND_NAME,1,2)||BVAL.STATE_CD END
WHERE 
    METADATA$ACTION = 'INSERT';
`;


my_sql_command_1_a_1 = `

INSERT INTO DAAS_TEMP.DAILY_ACTIVITY_SUMMARY_DIGITAL_PLAY_TEMP_DTF_STREAM 
          SELECT DISTINCT
    GUEST_UNIQUE_ID,
   DATE(REPORT_DT) AS GUEST_ACTIVITY_DATE
FROM 
   DAAS_CORE.DIGITAL_GUEST_XREF_BRIDGE_LKP_STREAM DGXBL_STREAM
JOIN 
	DAAS_CORE.DIGITAL_TRANSACTIONS_FACT DTF
ON 
	DGXBL_STREAM.IGAMING_XREF = DTF.CID 
LEFT JOIN 
   (SELECT DISTINCT BRAND_NAME,STATE_CD FROM DAAS_STG_IGAMING.BRAND_VALIDATION) BVAL 
ON 
   DTF.BRAND = REPLACE(BVAL.BRAND_NAME,'''')
AND
    DGXBL_STREAM.IGAMING_XREF_BRAND = CASE WHEN DTF.SOURCE_SYSTEM_NM = 'William Hill' THEN DTF.BRAND ELSE SUBSTR(BVAL.BRAND_NAME,1,2)||BVAL.STATE_CD END
WHERE 
    METADATA$ACTION = 'INSERT'
	AND NOT EXISTS (SELECT 1 FROM DAAS_TEMP.DAILY_ACTIVITY_SUMMARY_DIGITAL_PLAY_TEMP_DTF_STREAM DASDP 
	WHERE DASDP.GUEST_UNIQUE_ID=DGXBL_STREAM.GUEST_UNIQUE_ID
	AND DASDP.GUEST_ACTIVITY_DATE=DATE(DTF.REPORT_DT));
`;


my_sql_command_1_b = `
CREATE OR REPLACE TABLE DAAS_TEMP.DAILY_ACTIVITY_SUMMARY_DIGITAL_PLAY_TEMP_DIGITAL_SUMMARY as 
SELECT DGXBL.GUEST_UNIQUE_ID
	,'DIGITAL-'||DTF.BRAND_CD AS PROPERTY_CD
	,TO_DATE(DTF.REPORT_DT) AS GUEST_ACTIVITY_DATE
	,SUM(DTF.CASINO_GGR) CASINO_GGR
	,SUM(DTF.SPORTS_GGR) SPORTS_GGR
	,SUM(DTF.POKER_GGR) POKER_GGR
	,SUM(DTF.SPORTS_THEO) SPORTS_THEO
	,SUM(DTF.CASINO_NET_THEO) CASINO_NET_THEO
	,SUM(DTF.CASINO_WAGER) CASINO_WAGER
	,SUM(DTF.SPORTS_WAGER) SPORTS_WAGER
	,SUM(DTF.CASINO_BONUS) CASINO_BONUS
	,SUM(DTF.SPORTS_BONUS) SPORTS_BONUS
FROM 
    DAAS_CORE.DIGITAL_TRANSACTIONS_FACT DTF
LEFT JOIN 
  (SELECT DISTINCT BRAND_NAME,STATE_CD FROM DAAS_STG_IGAMING.BRAND_VALIDATION) BVAL 
ON 
   DTF.BRAND = REPLACE(BVAL.BRAND_NAME,'''')
LEFT JOIN 
	DAAS_CORE.DIGITAL_GUEST_XREF_BRIDGE_LKP DGXBL 
ON 
	DTF.CID = DGXBL.IGAMING_XREF 
AND
    DGXBL.IGAMING_XREF_BRAND = CASE WHEN DTF.SOURCE_SYSTEM_NM = 'William Hill' THEN DTF.BRAND ELSE SUBSTR(BVAL.BRAND_NAME,1,2)||BVAL.STATE_CD END
JOIN 
    DAAS_TEMP.DAILY_ACTIVITY_SUMMARY_DIGITAL_PLAY_TEMP_DTF_STREAM DTF_STREAM
ON 
    DGXBL.GUEST_UNIQUE_ID = DTF_STREAM.GUEST_UNIQUE_ID
AND
    DATE(DTF.REPORT_DT) =  DATE(DTF_STREAM.GUEST_ACTIVITY_DATE)
GROUP BY 
     DGXBL.GUEST_UNIQUE_ID
	,PROPERTY_CD
	,DATE(DTF.REPORT_DT);
`;

my_sql_command_1_c = `
create or replace TRANSIENT TABLE DAAS_TEMP.DAILY_ACTIVITY_SUMMARY_DIGITAL_PLAY_TEMP (
	TRIP_MASTER_ID VARCHAR(2),
	GUEST_UNIQUE_ID NUMBER(38,0),
	PROPERTY_CD VARCHAR(16777216),
	MARKET_CD VARCHAR(50),
	TRIP_TYPE VARCHAR(50),
	GUEST_ACTIVITY_DATE DATE,
	CASINO_GGR NUMBER(38,2),
	SPORTS_GGR NUMBER(38,2),
	POKER_GGR NUMBER(38,2),
	SPORTS_THEO NUMBER(38,2),
	CASINO_NET_THEO NUMBER(38,2),
	CASINO_WAGER NUMBER(38,2),
	SPORTS_WAGER NUMBER(38,2),
	CASINO_BONUS NUMBER(38,2),
	SPORTS_BONUS NUMBER(38,2),
	DIGITAL_FLG VARCHAR(1)
);
`;

my_sql_command_1_d = `
insert into DAAS_TEMP.DAILY_ACTIVITY_SUMMARY_DIGITAL_PLAY_TEMP
SELECT 
	'-1' AS TRIP_MASTER_ID
	,GUEST_UNIQUE_ID
	,PROPERTY_CD
	,'N/A' AS MARKET_CD
	,'PROPERTY' AS TRIP_TYPE
	, GUEST_ACTIVITY_DATE
	,CASINO_GGR
	,SPORTS_GGR
	,POKER_GGR
	,SPORTS_THEO
	,CASINO_NET_THEO
	,CASINO_WAGER
	,SPORTS_WAGER
	,CASINO_BONUS
	,SPORTS_BONUS
    ,'Y' AS DIGITAL_FLG	
FROM 
   DAAS_TEMP.DAILY_ACTIVITY_SUMMARY_DIGITAL_PLAY_TEMP_DIGITAL_SUMMARY DTF;
`;

my_sql_command_1_e = `

insert into DAAS_TEMP.DAILY_ACTIVITY_SUMMARY_DIGITAL_PLAY_TEMP
SELECT 
     '-1' AS TRIP_MASTER_ID
	, GUEST_UNIQUE_ID
	,'N/A' AS PROPERTY_CD
	,'DIGITAL' AS MARKET_CD
	,'MARKET' AS TRIP_TYPE  
    , GUEST_ACTIVITY_DATE
	,SUM(DTF.CASINO_GGR) CASINO_GGR
	,SUM(DTF.SPORTS_GGR) SPORTS_GGR
	,SUM(DTF.POKER_GGR) POKER_GGR
	,SUM(DTF.SPORTS_THEO) SPORTS_THEO
	,SUM(DTF.CASINO_NET_THEO) CASINO_NET_THEO
	,SUM(DTF.CASINO_WAGER) CASINO_WAGER
	,SUM(DTF.SPORTS_WAGER) SPORTS_WAGER
	,SUM(DTF.CASINO_BONUS) CASINO_BONUS
	,SUM(DTF.SPORTS_BONUS) SPORTS_BONUS	
	,'Y' AS DIGITAL_FLG
FROM 
   DAAS_TEMP.DAILY_ACTIVITY_SUMMARY_DIGITAL_PLAY_TEMP_DIGITAL_SUMMARY DTF
GROUP BY 
   GUEST_UNIQUE_ID,GUEST_ACTIVITY_DATE;
`;


my_sql_command_1_f = `
insert into DAAS_TEMP.DAILY_ACTIVITY_SUMMARY_DIGITAL_PLAY_TEMP
SELECT 
     '-1' AS TRIP_MASTER_ID
	, GUEST_UNIQUE_ID
	,'N/A' AS PROPERTY_CD
	,'N/A' AS MARKET_CD
	,'ENTERPRISE' AS TRIP_TYPE 
    , GUEST_ACTIVITY_DATE
	,SUM(DTF.CASINO_GGR) CASINO_GGR
	,SUM(DTF.SPORTS_GGR) SPORTS_GGR
	,SUM(DTF.POKER_GGR) POKER_GGR
	,SUM(DTF.SPORTS_THEO) SPORTS_THEO
	,SUM(DTF.CASINO_NET_THEO) CASINO_NET_THEO
	,SUM(DTF.CASINO_WAGER) CASINO_WAGER
	,SUM(DTF.SPORTS_WAGER) SPORTS_WAGER
	,SUM(DTF.CASINO_BONUS) CASINO_BONUS
	,SUM(DTF.SPORTS_BONUS) SPORTS_BONUS	
	,'Y' AS DIGITAL_FLG
FROM 
   DAAS_TEMP.DAILY_ACTIVITY_SUMMARY_DIGITAL_PLAY_TEMP_DIGITAL_SUMMARY DTF
GROUP BY 
   GUEST_UNIQUE_ID,GUEST_ACTIVITY_DATE;

`;




/* merge to daily_activity_summary table from the digital temp table*/

my_sql_command_2 = `
MERGE INTO DAAS_CORE.DAILY_ACTIVITY_SUMMARY TDS
USING 
	DAAS_TEMP.DAILY_ACTIVITY_SUMMARY_DIGITAL_PLAY_TEMP TDP
ON 
	TDP.GUEST_UNIQUE_ID 		= TDS.GUEST_UNIQUE_ID  
	AND TDP.GUEST_ACTIVITY_DATE = TDS.GUEST_ACTIVITY_DATE 
	AND TDP.PROPERTY_CD 		= TDS.PROPERTY_CD 
	AND TDP.MARKET_CD 			= TDS.MARKET_CD 
	AND TDP.TRIP_TYPE 			= TDS.TRIP_TYPE
	AND TDS.DELETE_IND          = 'N'
WHEN NOT MATCHED THEN 
INSERT  
(
	TRIP_MASTER_ID
	,GUEST_UNIQUE_ID
	,PROPERTY_CD
	,MARKET_CD
	,TRIP_TYPE
	,GUEST_ACTIVITY_DATE
    ,CASINO_GGR
	,SPORTS_GGR
	,POKER_GGR
	,SPORTS_THEO
	,CASINO_NET_THEO
	,CASINO_WAGER
	,SPORTS_WAGER
	,CASINO_BONUS
	,SPORTS_BONUS
	,DIGITAL_FLG
	,CREATED_DTTM
	,CREATED_BY
	,UPDATED_DTTM
	,UPDATED_BY
	,BATCH_ID
	,LAST_DML_CD
)
VALUES
(	
	 -1
    ,TDP.GUEST_UNIQUE_ID
    ,TDP.PROPERTY_CD
    ,TDP.MARKET_CD
	,TRIP_TYPE
	,GUEST_ACTIVITY_DATE
    ,CASINO_GGR
	,SPORTS_GGR
	,POKER_GGR
	,SPORTS_THEO
	,CASINO_NET_THEO
	,CASINO_WAGER
	,SPORTS_WAGER
	,CASINO_BONUS
	,SPORTS_BONUS
	,'Y'
	,CURRENT_TIMESTAMP
	,CURRENT_USER
	,CURRENT_TIMESTAMP
	,CURRENT_USER
	,20231512 
	,'I'
)
WHEN MATCHED THEN
UPDATE SET
	TDS.CASINO_GGR 		    = TDP.CASINO_GGR,
	TDS.SPORTS_GGR 		    = TDP.SPORTS_GGR,
	TDS.POKER_GGR 		    = TDP.POKER_GGR,
	TDS.SPORTS_THEO 		= TDP.SPORTS_THEO,
	TDS.CASINO_NET_THEO     = TDP.CASINO_NET_THEO,
	TDS.CASINO_WAGER 	    = TDP.CASINO_WAGER,
	TDS.SPORTS_WAGER 	    = TDP.SPORTS_WAGER,
	TDS.CASINO_BONUS 		= TDP.CASINO_BONUS,
	TDS.SPORTS_BONUS 		= TDP.SPORTS_BONUS,
	TDS.DIGITAL_FLG 		= TDP.DIGITAL_FLG,
	TDS.BATCH_ID 			= 20231512, 
	TDS.UPDATED_DTTM 		= CURRENT_TIMESTAMP,
	TDS.LAST_DML_CD 		= 'U'
`;






/************************************* 
             B&M merge 
***************************************/



/* update the delete indicator for the related digital trip using the temp table */
	
my_sql_command_3 = `
UPDATE DAAS_CORE.DAILY_ACTIVITY_SUMMARY DAS
SET 
    DELETE_IND = 'Y'
FROM 
    DAAS_TEMP.DAILY_ACTIVITY_SUMMARY_TRIP SRC 
WHERE   
    SRC.GUEST_UNIQUE_ID = DAS.GUEST_UNIQUE_ID
    AND  SRC.GUEST_ACTIVITY_DATE = DAS.GUEST_ACTIVITY_DATE
    AND  DAS.TRIP_MASTER_ID = -1
    AND  DAS.DELETE_IND = 'N'
    AND  DAS.TRIP_TYPE = 'ENTERPRISE'
    AND  SRC.TRIP_TYPE = 'ENTERPRISE'
    AND  DAS.DIGITAL_FLG = 'Y'
`;


/* merge the digital transaction columns to existing trips */

my_sql_command_4 = `
UPDATE DAAS_CORE.DAILY_ACTIVITY_SUMMARY DAS
SET 
	DAS.CASINO_GGR 		    = SRC.CASINO_GGR,
	DAS.SPORTS_GGR 		    = SRC.SPORTS_GGR,
	DAS.POKER_GGR 		    = SRC.POKER_GGR,
	DAS.SPORTS_THEO 		= SRC.SPORTS_THEO,
	DAS.CASINO_NET_THEO     = SRC.CASINO_NET_THEO,
	DAS.CASINO_WAGER 	    = SRC.CASINO_WAGER,
	DAS.SPORTS_WAGER 	    = SRC.SPORTS_WAGER,
	DAS.CASINO_BONUS 		= SRC.CASINO_BONUS,
	DAS.SPORTS_BONUS 		= SRC.SPORTS_BONUS,
    DAS.DIGITAL_FLG = 'Y'
FROM 
    DAAS_TEMP.DAILY_ACTIVITY_SUMMARY_TRIP SRC
WHERE   
    SRC.GUEST_UNIQUE_ID = DAS.GUEST_UNIQUE_ID
    AND  SRC.GUEST_ACTIVITY_DATE = DAS.GUEST_ACTIVITY_DATE
    AND  DAS.DELETE_IND = 'N'
    AND  DAS.TRIP_TYPE = 'ENTERPRISE'
    AND  SRC.TRIP_TYPE = 'ENTERPRISE'
	AND  DAS.DIGITAL_FLG = 'N'
`;



/* capture the trip_merge and customer_merge trips */

my_sql_command_5 = `
CREATE OR REPLACE TABLE DAAS_TEMP.DAILY_ACTIVITY_SUMMARY_TEMP AS
SELECT 
    XREF.PRIMARY_ACCOUNT_NBR AS GUEST_UNIQUE_ID
   ,DAS.GUEST_ACTIVITY_DATE AS GUEST_ACTIVITY_DATE
   ,SUM(DAS.CASINO_GGR) CASINO_GGR
   ,SUM(DAS.SPORTS_GGR) SPORTS_GGR
   ,SUM(DAS.POKER_GGR) POKER_GGR
   ,SUM(DAS.SPORTS_THEO) SPORTS_THEO
   ,SUM(DAS.CASINO_NET_THEO) CASINO_NET_THEO
   ,SUM(DAS.CASINO_WAGER) CASINO_WAGER
   ,SUM(DAS.SPORTS_WAGER) SPORTS_WAGER
   ,SUM(DAS.CASINO_BONUS) CASINO_BONUS
   ,SUM(DAS.SPORTS_BONUS) SPORTS_BONUS	
FROM 
   DAAS_TEMP.TRIP_MASTER_DAILY_SUMMARY_WRAPPER_STREAM_TEMP TMDSWS
JOIN 
   DAAS_CORE.GUEST_XREF_BRIDGE_LKP XREF 
ON 
   TMDSWS.GUEST_UNIQUE_ID = XREF.XREF_ACCOUNT_NBR
AND 
   XREF.PRIMARY_ACCOUNT_NBR <> '-1'
JOIN 
   DAAS_CORE.DAILY_ACTIVITY_SUMMARY DAS
ON 
   TMDSWS.TRIP_MASTER_ID = DAS.TRIP_MASTER_ID
WHERE 
   TMDSWS.METADATA$ACTION = 'DELETE' 
AND 
    DAS.TRIP_TYPE = 'ENTERPRISE' 
AND 
    DAS.DIGITAL_FLG = 'Y'
GROUP BY 
   XREF.PRIMARY_ACCOUNT_NBR,
   DAS.GUEST_ACTIVITY_DATE`;
   
   
   
/* merge to daily_activity_summary using  DAILY_ACTIVITY_SUMMARY_TEMP */
	
my_sql_command_6 = `
MERGE INTO DAAS_CORE.DAILY_ACTIVITY_SUMMARY AS TGT 
USING DAAS_TEMP.DAILY_ACTIVITY_SUMMARY_TEMP AS SRC
ON 
   SRC.GUEST_UNIQUE_ID = TGT.GUEST_UNIQUE_ID
   AND SRC.GUEST_ACTIVITY_DATE = TGT.GUEST_ACTIVITY_DATE
   AND TGT.TRIP_TYPE = 'ENTERPRISE'
   AND DELETE_IND = 'N'
WHEN NOT MATCHED THEN
INSERT
   (
      TRIP_MASTER_ID
     ,GUEST_UNIQUE_ID
     ,PROPERTY_CD
     ,MARKET_CD
     ,TRIP_TYPE
     ,GUEST_ACTIVITY_DATE
     ,CASINO_GGR
	 ,SPORTS_GGR
	 ,POKER_GGR
	 ,SPORTS_THEO
	 ,CASINO_NET_THEO
	 ,CASINO_WAGER
	 ,SPORTS_WAGER
	 ,CASINO_BONUS
	 ,SPORTS_BONUS
     ,DIGITAL_FLG
   ) 
VALUES
  (
     '-1'
     ,SRC.GUEST_UNIQUE_ID
     ,'N/A'
     ,'N/A'
     ,'ENTERPRISE'
     ,SRC.GUEST_ACTIVITY_DATE
     ,SRC.CASINO_GGR
	 ,SRC.SPORTS_GGR
	 ,SRC.POKER_GGR
	 ,SRC.SPORTS_THEO
	 ,SRC.CASINO_NET_THEO
	 ,SRC.CASINO_WAGER
	 ,SRC.SPORTS_WAGER
	 ,SRC.CASINO_BONUS
	 ,SRC.SPORTS_BONUS
     ,'Y'
 )
WHEN MATCHED THEN 
UPDATE 
SET 
	TGT.CASINO_GGR 		    = SRC.CASINO_GGR,
	TGT.SPORTS_GGR 		    = SRC.SPORTS_GGR,
	TGT.POKER_GGR 		    = SRC.POKER_GGR,
	TGT.SPORTS_THEO 		= SRC.SPORTS_THEO,
	TGT.CASINO_NET_THEO     = SRC.CASINO_NET_THEO,
	TGT.CASINO_WAGER 	    = SRC.CASINO_WAGER,
	TGT.SPORTS_WAGER 	    = SRC.SPORTS_WAGER,
	TGT.CASINO_BONUS 		= SRC.CASINO_BONUS,
	TGT.SPORTS_BONUS 		= SRC.SPORTS_BONUS,
    TGT.DIGITAL_FLG         = 'Y'`; 




try 
{ 

	if ( transaction_process == 'DIGITAL' )
	
	{

        proc_step = "Data_Process";
	    snowflake.execute( {sqlText: "BEGIN;" } );
		
		proc_output = my_sql_command_1_a;	
		snowflake.execute({sqlText: my_sql_command_1_a});
		snowflake.execute({sqlText: my_sql_command_1_a_1});
        snowflake.execute({sqlText: my_sql_command_1_b});
		snowflake.execute({sqlText: my_sql_command_1_c});
		snowflake.execute({sqlText: my_sql_command_1_d});
		snowflake.execute({sqlText: my_sql_command_1_e});
		snowflake.execute({sqlText: my_sql_command_1_f});


		proc_output = my_sql_command_2;
		statement2 = snowflake.createStatement( {sqlText: my_sql_command_2 } );
		sf_result_set  = statement2.execute(); 
		
	    snowflake.execute( {sqlText: "COMMIT;" } );
		
	}

    else 
	
    {

        proc_step = "Data_Process";
	    snowflake.execute( {sqlText: "BEGIN;" } );
		
        proc_output = my_sql_command_3;	
		statement3 = snowflake.createStatement( {sqlText: my_sql_command_3 } );
		sf_result_set  = statement3.execute(); 

		proc_output = my_sql_command_4;
		statement4 = snowflake.createStatement( {sqlText: my_sql_command_4 } );
		sf_result_set  = statement4.execute(); 
		
        proc_output = my_sql_command_5;	
		statement5 = snowflake.createStatement( {sqlText: my_sql_command_5 } );
		sf_result_set  = statement5.execute(); 

		proc_output = my_sql_command_6;
		statement6 = snowflake.createStatement( {sqlText: my_sql_command_6 } );
		sf_result_set  = statement6.execute(); 
		
		snowflake.execute( {sqlText: "COMMIT;" } );
	
	}


proc_output = 'SUCCESS';
}
catch (err) 
{ 
	proc_output = "FAILURE";
	error_code = "Failed: Code: " + err.code + "  State: " + err.state;
	error_message = "\n  Message: " + err.message + "\nStack Trace:\n" + err.stackTraceTxt;
	error_message = error_message.replace(/["']/g, "");
	if ( proc_step == "Data_Process")
	{
		/* CALL BATCH_CONTROL_UPDATE_BATCH_ERROR_LOG_PROC */
		snowflake.execute( {sqlText: "ROLLBACK;" } );
		my_sql_command_8 = "CALL DAAS_COMMON.BATCH_CONTROL_UPDATE_BATCH_ERROR_LOG_PROC ('" + BATCH_ID + "','" + SHARD_NAME + "','" + error_code + "','" + error_message + "','','','FATAL','" + tag + "_" + proc_step +"')"	
	}
	else if ( proc_step == "Update_Metrics")
	{
		my_sql_command_8 = "CALL DAAS_COMMON.BATCH_CONTROL_UPDATE_BATCH_ERROR_LOG_PROC ('" + BATCH_ID + "','" + SHARD_NAME + "','" + error_code + "','" + error_message + "','','','INFORMATIONAL','" + tag + "_" + proc_step +"')"
	} 
	snowflake.execute( {sqlText: my_sql_command_8});
}
return proc_output ;
$$;